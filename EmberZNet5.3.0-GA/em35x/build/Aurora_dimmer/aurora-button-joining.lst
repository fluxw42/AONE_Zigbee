###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        01/Dec/2016  11:42:00
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D
#        "BOARD_HEADER=\"../../../AONE_Zigbee/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"aurora-button-joining.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-button-joining.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-button-joining.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c
      1          //
      2          
      3          // This callback file is created for your convenience. You may add application code
      4          // to this file. If you regenerate this file over a previous version, the previous
      5          // version will be overwritten and any code you have added will be lost.
      6          #include <string.h>
      7          
      8          #include "app/framework/include/af.h"
      9          #include "app/framework/include/af-types.h"
     10          #include "app/framework/util/af-main.h"
     11          #include "app/framework/util/service-discovery.h"
     12          #include "app/util/common/form-and-join.h"
     13          #include "app/util/zigbee-framework/zigbee-device-common.h"
     14          #include "debug-printing.h"
     15          #include "aurora-button-joining.h"
     16          #include "aurora-button-joining-hal.h"
     17          //#include "app/builder/Aurora_dimmer/Aurora_dimmer_board_1.h
     18          
     19          #define REQUEST_ROUTE_TIMER                 8 // 240
     20          #define MAX_ROUTE_REQUESTS                  10
     21          
     22          // Custom event stubs. Custom events will be run along with all other events in the
     23          // application framework. They should be managed using the Ember Event API
     24          // documented in stack/include/events.h
     25          
     26          // Event control struct declarations
     27          EmberEventControl emberAfPluginAuroraButtonJoiningButtonDownEventControl;
     28          EmberEventControl emberAfPluginAuroraButtonJoiningButtonUpEventControl;
     29          EmberEventControl emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl;
     30          EmberEventControl emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl;
     31          EmberEventControl emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl;
     32          EmberEventControl emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl;
     33          EmberEventControl emberAfPluginAuroraButtonJoiningLedEventEventControl;
     34          EmberEventControl routeRequestTimerEventControl;
     35          EmberEventControl stackStatusEventControl;
     36          
     37          // Event function forward declarations
     38          void emberAfPluginAuroraButtonJoiningButtonDownEventHandler(void); 
     39          void emberAfPluginAuroraButtonJoiningButtonUpEventHandler(void); 
     40          void emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler(void); 
     41          void emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler(void); 
     42          void emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler(void); 
     43          void emberAfPluginAuroraButtonJoiningLedEventEventHandler(void); 
     44          void emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler(void);
     45          
     46          void emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(int8u newState, boolean set);
     47          
     48          
     49          static void emberAfPluginAuroraButtonJoiningReset(void);  //MN
     50          //static void emberAfPluginAuroraButtonJoiningJoinNetwork(void);//MN 
     51          static void emberAfPluginAuroraButtonJoiningPermitJoiningNetwork(void);
     52          static void emberAfPluginAuroraButtonJoiningLeaveNetwork(void);
     53          static void emberAfPluginAuroraButtonJoiningCheckButtonSequence(void);
     54          static void emberAfPluginAuroraButtonJoiningHandleButtonPress(int32u buttonDownTime);
     55          static void emberAfPluginAuroraButtonJoiningFlashLed(t_networkState newState);
     56          static t_ledSettings *getLedSettings(t_networkState networkState);
     57          

   \                                 In section .rodata, align 4, keep-with-next
     58          EmberEventData events[] =
   \                     events:
   \   00000000   0x........         DC32 emberAfPluginAuroraButtonJoiningLedEventEventControl
   \   00000004   0x........         DC32 emberAfPluginAuroraButtonJoiningLedEventEventHandler, 0H, 0H
   \              0x00000000   
   \              0x00000000   
     59           {
     60             { &emberAfPluginAuroraButtonJoiningLedEventEventControl,   emberAfPluginAuroraButtonJoiningLedEventEventHandler },
     61             { NULL, NULL }                            // terminator
     62           };
     63          
     64          
     65          static boolean ledsCurrentStates[] = {LED_OFF, LED_OFF};
     66          t_networkState currentNetworkState = LED_NWK_UNAVAILABLE;
     67          

   \                                 In section .text, align 4, keep-with-next
     68          const t_ledSettings ledSettings[] = {
   \                     ledSettings:
   \   00000000   0x00 0x0C          DC8 0, 12, 2, 11, 0, 3, 12, 1, 11, 0, 2, 12, 0, 11, 0, 4, 12, 0, 11, 0
   \              0x02 0x0B    
   \              0x00 0x03    
   \              0x0C 0x01    
   \              0x0B 0x00    
   \              0x02 0x0C    
   \              0x00 0x0B    
   \              0x00 0x04    
   \              0x0C 0x00    
   \              0x0B 0x00    
   \   00000014   0x01 0x0C          DC8 1, 12, 0, 11, 2, 7, 12, 0, 11, 2, 0, 0
   \              0x00 0x0B    
   \              0x02 0x07    
   \              0x0C 0x00    
   \              0x0B 0x02    
   \              0x00 0x00    
     69              {LED_NWK_UNAVAILABLE,   {{LED_RED, LED_FLASH},  {LED_GREEN, LED_OFF}}},
     70              {LED_NOT_JOINED,        {{LED_RED, LED_ON},     {LED_GREEN, LED_OFF}}},
     71              {LED_JOINED,            {{LED_RED, LED_OFF},    {LED_GREEN, LED_OFF}}},
     72              {LED_PERMIT_JOINING,    {{LED_RED, LED_OFF},    {LED_GREEN, LED_OFF}}},
     73              {LED_JOINING,           {{LED_RED, LED_OFF},    {LED_GREEN, LED_FLASH}}},
     74              {LED_IDENTIFY,          {{LED_RED, LED_OFF},    {LED_GREEN, LED_FLASH}}}
     75          };
     76          
     77          #define MAX_LED_STATES          sizeof(ledSettings) / sizeof(t_ledSettings)
     78          

   \                                 In section .data, align 4
     79          static t_buttonSeqence buttonSequence[] = {
   \                     buttonSequence:
   \   00000000   0x01 0x00          DC8 1, 0
   \   00000002   0x0BB8 0x0000      DC16 3000, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000       
   \   0000000C   0x........         DC32 emberAfPluginAuroraButtonJoiningReset
   \   00000010   0x03 0x00          DC8 3, 0
   \   00000012   0x0064 0x0064      DC16 100, 100, 100, 0, 0
   \              0x0064 0x0000
   \              0x0000       
   \   0000001C   0x........         DC32 emberAfPluginAuroraButtonJoiningReset

   \                                 In section .bss, align 4
     80            {1, {3000, 0, 0, 0, 0}, emberAfPluginAuroraButtonJoiningReset},                         // Join MATCH 0 MN CHANGED TO RESET on a 3 second button press
     81            {3, {100, 100, 100, 0, 0}, emberAfPluginAuroraButtonJoiningReset}//,            // Leave MATCH 1 MN CHANGED to RESET on 3x 100ms button presses
     82           // {2, {1000, 1000, 0, 0, 0}, emberAfPluginAuroraButtonJoiningPermitJoiningNetwork}              // Identify / Permit Joining MATCH 2
     83          };
     84          
     85          static int16u buttonDownTimes[BUTTON_MAX_PRESSES];
     86          static int8u buttonDownCount;
   \                     buttonDownCount:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 1
   \   00000003                      DS8 1
   \                     emberAfPluginAuroraButtonJoiningButtonDownEventControl:
   \   00000004                      DS8 8
   \                     emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl:
   \   0000000C                      DS8 8
   \                     emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl:
   \   00000014                      DS8 8
   \                     emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl:
   \   0000001C                      DS8 8
   \   00000024                      DS8 12
   \   00000030                      DS8 4

   \                                 In section .bss, align 4
   \                     emberAfPluginAuroraButtonJoiningButtonUpEventControl:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     currentNetworkState:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \                     emberAfPluginAuroraButtonJoiningLedEventEventControl:
   \   00000004                      DS8 8

   \                                 In section .bss, align 4
   \                     routeRequestTimerEventControl:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     87          static boolean buttonDownDetectStarted = FALSE;
     88          static boolean buttonUpDetectStarted = FALSE;
     89          static int32u buttonDownTime = 0;
     90          static boolean buttonSequenceStarted = FALSE;
     91          static boolean joiningFLag = FALSE;
   \                     joiningFLag:
   \   00000000                      DS8 1
   \   00000001                      DS8 3
   \                     stackStatusEventControl:
   \   00000004                      DS8 8
     92          static int8u deviceStateFlags = DEVICE_STATE_CLEAR | DEVICE_STATE_NETWORK_UNAVAILABLE;  
     93          static boolean checkedIfPaired = FALSE;
     94          //static int32u lastCheckNwkTime =0;  //MN new static global
     95          
     96          char deviceStateText[][20] = {
     97               "Joining",
     98               "Joined",
     99               "Identifying",
    100               "Permit Joining",
    101               "Network Unavailable"
    102               };
    103          

   \                                 In section .bss, align 1
    104          boolean nwkNewJoinPending = FALSE; //= FALSE; //MN declare global variable
   \                     nwkNewJoinPending:
   \   00000000                      DS8 1
    105          
    106          void emRadioSetEdCcaThreshold(int8s threshold);     // ember provided
    107          
    108          
    109          
    110          void setRadioPowerAndMode(void);
    111          
    112          
    113          /** @brief Button pressed event
    114           *  
    115           *  This event handler is called when the button is pressed. This starts the
    116           *  debounce timer.
    117           * 
    118           * @param none
    119           */

   \                                 In section .text, align 2, keep-with-next
    120          void emberAfPluginAuroraButtonJoiningButtonDownEventHandler(void)
    121          {
   \                     emberAfPluginAuroraButtonJoiningButtonDownEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    122            // Deactivate the event
    123            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonDownEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_17: (+1)
   \   00000006   0x7120             STRB     R0,[R4, #+4]
    124          
    125            // See if we have already started button detect
    126            if (!buttonDownDetectStarted) 
   \   00000008   0x7860             LDRB     R0,[R4, #+1]
   \   0000000A   0xB950             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonDownEve_0
    127            {
    128              // Set event for the debounce time
    129              emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl, BUTTON_DEBOUNCE_TIME);
   \   0000000C   0x2132             MOVS     R1,#+50
   \   0000000E   0xF104 0x000C      ADD      R0,R4,#+12
   \   00000012   0x.... 0x....      BL       emEventControlSetDelayMS
    130              buttonDownDetectStarted = TRUE;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x7060             STRB     R0,[R4, #+1]
    131          
    132              if (!buttonSequenceStarted) 
   \   0000001A   0x78E0             LDRB     R0,[R4, #+3]
   \   0000001C   0xB908             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonDownEve_0
    133              {
    134                buttonSequenceStarted = TRUE;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x70E0             STRB     R0,[R4, #+3]
    135              }
    136            } 
    137          }
   \                     ??emberAfPluginAuroraButtonJoiningButtonDownEve_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x.... 0x....      LDR.W    R4,??DataTable51_3
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x4770             BX       LR
    138          
    139          /** @brief Debounce button press
    140           *  
    141           *  This event handler is called when the button is pressed. This debounces 
    142           *  the button press and starts a timer to measure the length of time the 
    143           *  button is pressed for.
    144           * 
    145           * @param none
    146           */

   \                                 In section .text, align 2, keep-with-next
    147          void emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler(void)
    148          {
   \                     emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    149            boolean buttonStateNow;
    150          
    151            // Deavtivate the event
    152            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_18: (+1)
   \   00000006   0x7320             STRB     R0,[R4, #+12]
    153          
    154            // Cancel the end of sequence timeout since we have a new button press
    155            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl);
   \   00000008   0x7720             STRB     R0,[R4, #+28]
    156          
    157            // Get the current state of the input and check to confirm button press
    158            buttonStateNow = buttonGetState();
    159            if (buttonStateNow == BUTTON_PRESSED) 
   \   0000000A   0x.... 0x....      BL       buttonGetState
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xD102             BNE.N    ??emberAfPluginAuroraButtonJoiningButtonDownDeb_0
    160            {
    161              buttonDownTime = halCommonGetInt32uMillisecondTick();
   \   00000012   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000016   0x6320             STR      R0,[R4, #+48]
    162            }
    163          
    164            // Indicate we are not starting detection
    165            buttonDownDetectStarted = FALSE;
   \                     ??emberAfPluginAuroraButtonJoiningButtonDownDeb_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x7060             STRB     R0,[R4, #+1]
    166          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    167          
    168          /** @brief Button released event
    169           *  
    170           *  This event handler is called when the button is released. This starts the
    171           *  debounce timer.
    172           * 
    173           * @param none
    174           */

   \                                 In section .text, align 2, keep-with-next
    175          void emberAfPluginAuroraButtonJoiningButtonUpEventHandler(void)
    176          {
   \                     emberAfPluginAuroraButtonJoiningButtonUpEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    177            // Deactivate the event
    178            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonUpEventControl);
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable51_2
    179          
    180            // If we are not already detecting button release set debounce delayed event
    181            if (!buttonUpDetectStarted) 
   \   00000006   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_19: (+1)
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
   \   0000000C   0x78A0             LDRB     R0,[R4, #+2]
   \   0000000E   0xB930             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonUpEvent_0
    182            {
    183              emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl, BUTTON_DEBOUNCE_TIME);
   \   00000010   0x2132             MOVS     R1,#+50
   \   00000012   0xF104 0x0014      ADD      R0,R4,#+20
   \   00000016   0x.... 0x....      BL       emEventControlSetDelayMS
    184              buttonUpDetectStarted = TRUE;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x70A0             STRB     R0,[R4, #+2]
    185            }
    186          }
   \                     ??emberAfPluginAuroraButtonJoiningButtonUpEvent_0: (+1)
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    187          
    188          /** @brief Debounce button release
    189           *  
    190           *  This debounces the button release and works out the time the button was pressed.
    191           *  It calls emberAfPluginAuroraButtonJoiningHandleButtonPress() to record the button press.
    192           * 
    193           * @param none
    194           */

   \                                 In section .text, align 2, keep-with-next
    195          void emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler(void)
    196          {
   \                     emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    197            boolean buttonStateNow;
    198          
    199            // Deactivate the event
    200            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_20: (+1)
   \   00000006   0x7520             STRB     R0,[R4, #+20]
    201          
    202            // Get the current state of the input and check to confirm button release
    203            buttonStateNow = buttonGetState();
    204            if (buttonStateNow == BUTTON_RELEASED) 
   \   00000008   0x.... 0x....      BL       buttonGetState
   \   0000000C   0xB9B8             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonUpDebou_0
    205            {
    206              // Work out the duration of the button press
    207              buttonDownTime = halCommonGetInt32uMillisecondTick() - buttonDownTime;
   \   0000000E   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000012   0x6B21             LDR      R1,[R4, #+48]
   \   00000014   0x1A42             SUBS     R2,R0,R1
   \   00000016   0x6322             STR      R2,[R4, #+48]
    208              
    209              emberAfDebugPrint("Button release (%d)\r\n", buttonDownTime);
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      ADR.W    R1,?_0
   \   0000001E   0x.... 0x....      BL       emberAfPrint
    210             
    211              // Record the button press
    212              emberAfPluginAuroraButtonJoiningHandleButtonPress(buttonDownTime);    
   \   00000022   0x7820             LDRB     R0,[R4, #+0]
   \   00000024   0x2805             CMP      R0,#+5
   \   00000026   0xDA05             BGE.N    ??emberAfPluginAuroraButtonJoiningButtonUpDebou_1
   \   00000028   0x6B22             LDR      R2,[R4, #+48]
   \   0000002A   0xEB04 0x0140      ADD      R1,R4,R0, LSL #+1
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \   00000030   0x848A             STRH     R2,[R1, #+36]
   \   00000032   0x7020             STRB     R0,[R4, #+0]
   \                     ??emberAfPluginAuroraButtonJoiningButtonUpDebou_1: (+1)
   \   00000034   0x21C8             MOVS     R1,#+200
   \   00000036   0xF104 0x001C      ADD      R0,R4,#+28
   \   0000003A   0x.... 0x....      BL       emEventControlSetDelayMS
    213            }
    214          
    215            buttonUpDetectStarted = FALSE;
   \                     ??emberAfPluginAuroraButtonJoiningButtonUpDebou_0: (+1)
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x70A0             STRB     R0,[R4, #+2]
    216          }
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
    217          
    218          
    219          /** @brief Records the button pressed time
    220           *  
    221           *  The time is recorded in an array and a timer to detect 
    222           *  the end of the button sequence is started.
    223           *
    224           * @param buttonDownTime - the time the button was pressed
    225           */
    226          static void emberAfPluginAuroraButtonJoiningHandleButtonPress(int32u buttonDownTime)
    227          {
    228            // Make sure we don't overrun the button presses array
    229            if (buttonDownCount < MAX_BUTTON_PRESSES) 
    230            {
    231          
    232              // Record the button press duration and count it
    233              buttonDownTimes[buttonDownCount] = buttonDownTime;
    234              buttonDownCount++;
    235            }
    236            
    237            // Set delayed event for the end of sequence
    238            emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl, BUTTON_UP_END_OF_SEQUENCE_TIMEOUT);
    239          }
    240          
    241          /** @brief End of button press sequence
    242           *  
    243           *  This is called when the end of sequence timer expires. It calls the 
    244           *  emberAfPluginAuroraButtonJoiningCheckButtonSequence()function to see if is a valid sequence and
    245           *  then resets the sequence recording data.
    246           *
    247           * @param none
    248           */

   \                                 In section .text, align 2, keep-with-next
    249          void emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler(void)
    250          {
   \                     emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    251            //emberAfDebugPrint("End sequence\r\n");
    252            
    253            // Deactivate the event
    254            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_21: (+1)
   \   00000006   0x7720             STRB     R0,[R4, #+28]
    255          
    256            // Check the sequence to see if it matches any pre defined ones
    257            emberAfPluginAuroraButtonJoiningCheckButtonSequence();
   \   00000008   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningCheckButtonSequence
    258            
    259            // Reset the keypress detector for the next sequence
    260            memset(buttonDownTimes, 0, sizeof(buttonDownTimes));
   \   0000000C   0x210A             MOVS     R1,#+10
   \   0000000E   0xF104 0x0024      ADD      R0,R4,#+36
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
    261            buttonDownTime = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x6320             STR      R0,[R4, #+48]
    262            buttonDownCount = 0;
   \   0000001A   0x7020             STRB     R0,[R4, #+0]
    263          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    264          
    265          /** @brief Check for valid button sequence
    266           *  
    267           *  The set of valid button sequences is stored in buttonSequence array.
    268           *  The buttonDownTimes array is compared with the buttonSequence array. Time tolerances are 
    269           *  taken into account. If there is a match, the appropriate function is called. 
    270           *  If not the sequence is ignored.
    271           *
    272           * @param none
    273           */

   \                                 In section .text, align 2, keep-with-next
    274          static void emberAfPluginAuroraButtonJoiningCheckButtonSequence(void) 
    275          {
   \                     emberAfPluginAuroraButtonJoiningCheckButtonSequence: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    276            int8u sequenceIndex;
    277            int8u index = 0;
    278            boolean sequenceMatch;
    279            
    280            // Iterate over the defined sequences
    281            for (sequenceIndex = 0; sequenceIndex < MAX_BUTTON_SEQUENCES; sequenceIndex++) 
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x.... 0x....      LDR.W    R5,??DataTable51_4
   \   00000008   0xE002             B.N      ??emberAfPluginAuroraButtonJoiningCheckButtonSe_0
    282            {
    283              sequenceMatch = TRUE;   
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_1: (+1)
   \   0000000A   0x2201             MOVS     R2,#+1
    284                  
    285              if (sequenceIndex != 1) //MN check all sequences except the special power cycling sequence against normal tolerances
   \   0000000C   0x2C01             CMP      R4,#+1
   \   0000000E   0xD01C             BEQ.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_2
    286              {
    287                // Iterate over the button press times
    288                for (index = 0; index < buttonSequence[sequenceIndex].presses; index++) 
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_0: (+1)
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x0122             LSLS     R2,R4,#+4
   \   00000014   0xE001             B.N      ??emberAfPluginAuroraButtonJoiningCheckButtonSe_3
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_4: (+1)
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0xB2C0             UXTB     R0,R0
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_3: (+1)
   \   0000001A   0x5D51             LDRB     R1,[R2, R5]
   \   0000001C   0x4288             CMP      R0,R1
   \   0000001E   0xDA33             BGE.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_5
    289                { 
    290                  // If the time is outside the defined time go to the next sequence
    291                  if ((buttonDownTimes[index] == 0) || 
    292                      (!((buttonDownTimes[index] >= buttonSequence[sequenceIndex].downTime[index] - BUTTON_PRESS_MINUS_TOLERANCE) && 
    293                      (buttonDownTimes[index] < buttonSequence[sequenceIndex].downTime[index] + BUTTON_PRESS_PLUS_TOLERANCE)))) 
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable51_3
   \   00000024   0xEB01 0x0340      ADD      R3,R1,R0, LSL #+1
   \   00000028   0x8C9B             LDRH     R3,[R3, #+36]
   \   0000002A   0xB15B             CBZ.N    R3,??emberAfPluginAuroraButtonJoiningCheckButtonSe_6
   \   0000002C   0x1956             ADDS     R6,R2,R5
   \   0000002E   0xEB06 0x0640      ADD      R6,R6,R0, LSL #+1
   \   00000032   0x8876             LDRH     R6,[R6, #+2]
   \   00000034   0xF2A6 0x57DC      SUBW     R7,R6,#+1500
   \   00000038   0x42BB             CMP      R3,R7
   \   0000003A   0xDB03             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_6
   \   0000003C   0xF206 0x56DC      ADDW     R6,R6,#+1500
   \   00000040   0x42B3             CMP      R3,R6
   \   00000042   0xDBE8             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_4
    294                  { 
    295                    sequenceMatch = FALSE;
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_6: (+1)
   \   00000044   0x2200             MOVS     R2,#+0
    296                    break;
    297                  } 
    298                }
    299          
    300                // If we have found a match exit the loop
    301                if (sequenceMatch) 
    302                {
    303                  break;
    304                }
    305              }  
    306              
    307              
    308              if (sequenceIndex == 1) //MN if this is the special power cyling sequence, use super tight tolerances
   \   00000046   0x2C01             CMP      R4,#+1
   \   00000048   0xD119             BNE.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_7
    309              {
    310                // Iterate over the button press times
    311                for (index = 0; index < buttonSequence[sequenceIndex].presses; index++) 
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_2: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x0123             LSLS     R3,R4,#+4
   \   0000004E   0xE001             B.N      ??emberAfPluginAuroraButtonJoiningCheckButtonSe_8
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_9: (+1)
   \   00000050   0x1C40             ADDS     R0,R0,#+1
   \   00000052   0xB2C0             UXTB     R0,R0
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_8: (+1)
   \   00000054   0x5D5E             LDRB     R6,[R3, R5]
   \   00000056   0x42B0             CMP      R0,R6
   \   00000058   0xDA10             BGE.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_10
   \   0000005A   0xEB01 0x0640      ADD      R6,R1,R0, LSL #+1
   \   0000005E   0x8CB6             LDRH     R6,[R6, #+36]
   \   00000060   0xB156             CBZ.N    R6,??emberAfPluginAuroraButtonJoiningCheckButtonSe_11
   \   00000062   0x195F             ADDS     R7,R3,R5
   \   00000064   0xEB07 0x0740      ADD      R7,R7,R0, LSL #+1
   \   00000068   0x887F             LDRH     R7,[R7, #+2]
   \   0000006A   0xF1A7 0x0C14      SUB      R12,R7,#+20
   \   0000006E   0x4566             CMP      R6,R12
   \   00000070   0xDB02             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_11
   \   00000072   0x3714             ADDS     R7,R7,#+20
   \   00000074   0x42BE             CMP      R6,R7
   \   00000076   0xDBEB             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_9
    312                { 
    313                  // If the time is outside the defined time go to the next sequence
    314                  if ((buttonDownTimes[index] == 0) || 
    315                      (!((buttonDownTimes[index] >= buttonSequence[sequenceIndex].downTime[index] - BUTTON_PRESS_MINUS_TOLERANCE_TIGHT) && 
    316                      (buttonDownTimes[index] < buttonSequence[sequenceIndex].downTime[index] + BUTTON_PRESS_PLUS_TOLERANCE_TIGHT)))) 
    317                  { 
    318                    sequenceMatch = FALSE;
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_11: (+1)
   \   00000078   0x2200             MOVS     R2,#+0
    319                    break;
   \   0000007A   0xE000             B.N      ??emberAfPluginAuroraButtonJoiningCheckButtonSe_7
    320                  } 
    321                }
    322          
    323                // If we have found a match exit the loop
    324                if (sequenceMatch) 
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_10: (+1)
   \   0000007C   0xB91A             CBNZ.N   R2,??emberAfPluginAuroraButtonJoiningCheckButtonSe_12
    325                {
    326                  break;
    327                }
    328              }
    329              
    330              
    331            }
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_7: (+1)
   \   0000007E   0x1C64             ADDS     R4,R4,#+1
   \   00000080   0xB2E4             UXTB     R4,R4
   \   00000082   0x2C04             CMP      R4,#+4
   \   00000084   0xDBC1             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_1
    332          
    333            // If we have a match, call the appropriate function
    334            if (sequenceMatch) 
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_12: (+1)
   \   00000086   0xB152             CBZ.N    R2,??emberAfPluginAuroraButtonJoiningCheckButtonSe_13
    335            {
    336              emberAfDebugPrint("Match: %d\r\n", sequenceIndex);
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_5: (+1)
   \   00000088   0x4622             MOV      R2,R4
   \   0000008A   0x.... 0x....      ADR.W    R1,?_1
   \   0000008E   0x.... 0x....      BL       ?Subroutine3
    337              buttonSequence[sequenceIndex].buttonFunc();
   \                     ??CrossCallReturnLabel_16: (+1)
   \   00000092   0xEB05 0x1004      ADD      R0,R5,R4, LSL #+4
   \   00000096   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   0000009A   0x68C0             LDR      R0,[R0, #+12]
   \   0000009C   0x4700             BX       R0
    338            } 
    339            else 
    340            {
    341              emberAfDebugPrint("No match\r\n");
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_13: (+1)
   \   0000009E   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   000000A2   0x.... 0x....      ADR.W    R1,?_2
   \   000000A6   0x....             B.N      ?Subroutine0
    342            }
    343          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrint

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrint
    344          
    345              //if the device is not paired to a network, it will enter pairing mode
    346          

   \                                 In section .text, align 2, keep-with-next
    347          void checkIfPaired(void) //MN
    348          {
   \                     checkIfPaired: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    349            if (!checkedIfPaired)
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable51_5
   \   00000006   0x7860             LDRB     R0,[R4, #+1]
   \   00000008   0xB978             CBNZ.N   R0,??checkIfPaired_0
    350              {
    351              emberAfDebugPrint("Reached checkIfPaired\n"); //MN
   \   0000000A   0x.... 0x....      ADR.W    R1,?_3
   \   0000000E   0x.... 0x....      BL       ?Subroutine5
    352              emberAfDebugPrint("@line 316, device state is: %x\n", deviceStateFlags); //MN
   \                     ??CrossCallReturnLabel_25: (+1)
   \   00000012   0x7822             LDRB     R2,[R4, #+0]
   \   00000014   0x.... 0x....      ADR.W    R1,?_4
   \   00000018   0x.... 0x....      BL       ?Subroutine3
    353              
    354              if (emberNetworkState() == EMBER_NO_NETWORK)
   \                     ??CrossCallReturnLabel_15: (+1)
   \   0000001C   0x.... 0x....      BL       emberNetworkState
   \   00000020   0xB908             CBNZ.N   R0,??checkIfPaired_1
    355              {
    356                 emberAfPluginAuroraButtonJoiningReset(); //MN changed from Join to Reset
   \   00000022   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningReset
    357              }
    358              
    359              checkedIfPaired=TRUE;
   \                     ??checkIfPaired_1: (+1)
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x7060             STRB     R0,[R4, #+1]
    360          
    361            }
    362              
    363          }  
   \                     ??checkIfPaired_0: (+1)
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrint
    364          
    365          //Reset function to leave and then join a network

   \                                 In section .text, align 2, keep-with-next
    366          static void emberAfPluginAuroraButtonJoiningReset(void)
    367          {
   \                     emberAfPluginAuroraButtonJoiningReset: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    368          
    369              emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningReset line 338 aurora-button-joining\n"); //MN
   \   00000002   0x.... 0x....      ADR.W    R1,?_5
   \   00000006   0x....             LDR.N    R4,??DataTable51_6
   \   00000008   0x.... 0x....      BL       ?Subroutine5
    370              
    371              //emberAfPluginAuroraButtonJoiningLeaveNetwork();
    372              
    373          /*    emberAfPluginAuroraButtonJoiningJoinNetwork();
    374          
    375                  if (emberNetworkState() == EMBER_NETWORK_DOWN) //try again
    376                  {
    377                        emberAfDebugPrint("trying to join again\n"); //MN
    378                          emberAfPluginAuroraButtonJoiningJoinNetwork();
    379                  }
    380              
    381             */
    382              
    383              //halReboot();
    384              
    385              //MN sample code from Gary
    386              EmberNetworkStatus nwkState = emberAfNetworkState();  // Get present network state.    
   \                     ??CrossCallReturnLabel_24: (+1)
   \   0000000C   0x.... 0x....      BL       emberAfNetworkState
    387              switch (nwkState) 
   \   00000010   0x7821             LDRB     R1,[R4, #+0]
   \   00000012   0xB130             CBZ.N    R0,??emberAfPluginAuroraButtonJoiningReset_0
   \   00000014   0x2802             CMP      R0,#+2
   \   00000016   0xD010             BEQ.N    ??emberAfPluginAuroraButtonJoiningReset_1
   \   00000018   0xD319             BCC.N    ??emberAfPluginAuroraButtonJoiningReset_2
   \   0000001A   0x2804             CMP      R0,#+4
   \   0000001C   0xD01A             BEQ.N    ??emberAfPluginAuroraButtonJoiningReset_3
   \   0000001E   0xD308             BCC.N    ??emberAfPluginAuroraButtonJoiningReset_4
   \   00000020   0xE01F             B.N      ??emberAfPluginAuroraButtonJoiningReset_5
    388              {
    389                  case EMBER_NO_NETWORK:
    390                  {
    391                      emberAfDebugPrintln("Find joinable networks");
   \                     ??emberAfPluginAuroraButtonJoiningReset_0: (+1)
   \   00000022   0x.... 0x....      ADR.W    R1,?_6
   \   00000026   0x.... 0x....      BL       ?Subroutine2
    392                                  
    393                      emberAfStartSearchForJoinableNetwork();  // Start Joining scan.
   \                     ??CrossCallReturnLabel_9: (+1)
   \   0000002A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000002E   0x.... 0x....      B.W      emberAfStartSearchForJoinableNetworkCallback
    394                      
    395                      break; 
    396                  }            
    397                  case EMBER_JOINED_NETWORK_NO_PARENT:
    398                  {
    399                      // Join request behaviour (if Network:Lost) - do a leave nwk then then do a new Join.
    400                      if (!nwkNewJoinPending)
   \                     ??emberAfPluginAuroraButtonJoiningReset_4: (+1)
   \   00000032   0xB9E1             CBNZ.N   R1,??emberAfPluginAuroraButtonJoiningReset_6
    401                      {   
    402                            emberLeaveNetwork(); //emberAfPluginAuroraButtonJoiningLeaveNetwork();
   \   00000034   0x.... 0x....      BL       emberLeaveNetwork
    403                        
    404                        nwkNewJoinPending = TRUE;  // SET GLOBAL FLAG, a new Join will be triggered when device has LEFT nwk.                				
   \   00000038   0xE006             B.N      ??CrossCallReturnLabel_8
    405                      }
    406                      break;
    407                  }
    408                  case EMBER_JOINED_NETWORK:
    409                  {          
    410                        // Join request behaviour (if Network:Joined) - do a leave nwk then then do a new Join.
    411                        if (!nwkNewJoinPending)
   \                     ??emberAfPluginAuroraButtonJoiningReset_1: (+1)
   \   0000003A   0xB9C1             CBNZ.N   R1,??emberAfPluginAuroraButtonJoiningReset_6
    412                        {
    413                                emberLeaveNetwork();//emberAfPluginAuroraButtonJoiningLeaveNetwork(); // Leave network straight away.                
   \   0000003C   0x.... 0x....      BL       emberLeaveNetwork
    414                      emberAfDebugPrintln("REBOOT NOW EMBER_JOINED_NETWORK");
   \   00000040   0x.... 0x....      ADR.W    R1,?_7
   \   00000044   0x.... 0x....      BL       ?Subroutine2
    415                                nwkNewJoinPending = TRUE;  // Set global flag, a new Join will be triggered when device has LEFT nwk.                				
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x7020             STRB     R0,[R4, #+0]
   \   0000004C   0xBD10             POP      {R4,PC}
    416                        }				
    417                      break;
    418                  }
    419                  case EMBER_JOINING_NETWORK:
    420                  {
    421                      emberAfDebugPrintln("Joining network");
   \                     ??emberAfPluginAuroraButtonJoiningReset_2: (+1)
   \   0000004E   0x.... 0x....      ADR.W    R1,?_8
   \   00000052   0xE001             B.N      ??emberAfPluginAuroraButtonJoiningReset_7
    422                      
    423                      break;
    424                  }
    425                  case EMBER_LEAVING_NETWORK:
    426                  {
    427                      emberAfDebugPrintln("Leaving network");
   \                     ??emberAfPluginAuroraButtonJoiningReset_3: (+1)
   \   00000054   0x.... 0x....      ADR.W    R1,?_9
   \                     ??emberAfPluginAuroraButtonJoiningReset_7: (+1)
   \   00000058   0xE8BD 0x4010      POP      {R4,LR}
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x.... 0x....      B.W      emberAfPrintln
    428                      
    429                      break;
    430                  }
    431                  default :
    432                  {
    433                      emberAfDebugPrintln("Join request, nwk state=%x", nwkState);
   \                     ??emberAfPluginAuroraButtonJoiningReset_5: (+1)
   \   00000062   0xE8BD 0x4010      POP      {R4,LR}
   \   00000066   0x4602             MOV      R2,R0
   \   00000068   0x.... 0x....      ADR.W    R1,?_10
   \   0000006C   0x....             B.N      ?Subroutine1
    434                      break; 
    435                  }    
    436              }
    437              
    438              
    439              
    440          
    441          }
   \                     ??emberAfPluginAuroraButtonJoiningReset_6: (+1)
   \   0000006E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    442          
    443          
    444          
    445          
    446          /** @brief Join a network
    447           *  
    448           *  Start the joining process. Flashes the led to indicate this and 
    449           *  sets the joining flag to prevent interruption of the joining process
    450           *  by button presses
    451           *
    452           * @param none
    453           */
    454          
    455          static void emberAfPluginAuroraButtonJoiningJoinNetwork(void)
    456          {
    457             
    458                  //MN 
    459              emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningJoinNetwork line 319 aurora-button-joining\n");
    460            
    461            emberAfDebugPrint("Find joinable networks (%x)\r\n", emberNetworkState());
    462          
    463              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINING, DEVICE_STATE_FLAGS_SET);
    464          
    465              emberAfDebugPrint("@line 333, device state is: %x\n", deviceStateFlags);
    466          
    467             
    468                  //MN  
    469              emberAfDebugPrint("Reached line 327 aurora-button-joining\n");
    470            
    471              // Searches for and joins network
    472              emberAfStartSearchForJoinableNetwork();
    473                
    474              emberAfCorePrintln("%p: join", "BUTTON\r\n");
    475              
    476          }
    477          
    478          
    479          
    480          /** @brief Clear the joining flag
    481           *  
    482           *  Called from emberAfPluginNetworkFindFinishedCallback(). Indicates that 
    483           *  the joining process is finished.
    484           *
    485           * @param none
    486           */

   \                                 In section .text, align 2, keep-with-next
    487          void emberAfPluginAuroraButtonJoiningClearJoiningFlag(void)
    488          {
    489            joiningFLag = FALSE;
   \                     emberAfPluginAuroraButtonJoiningClearJoiningFlag: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable51_7
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    490          }
   \   00000006   0x4770             BX       LR               ;; return
    491          
    492          /** @brief Permit joining
    493           *  
    494           *  Broadcasts a permit join request. Flashes the led to indicate this.
    495           *  Permit join is enabled for the PERMIT_JOIN_TIMEOUT period. A timer is 
    496           *  started to reset the led to the LED_JOINED state when the permit join 
    497           *  timeout expires.
    498           *  
    499           * @param none
    500           */
    501          static void emberAfPluginAuroraButtonJoiningPermitJoiningNetwork(void)
    502          {
    503            
    504                emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningPermitJoiningNetwork line 374 aurora-button-joining\n");//MN
    505          
    506            int8u permitJoinDuration;
    507            
    508            emberAfDebugPrint("Setting permit join flag\r\n");
    509          
    510            if (emberNetworkState() == EMBER_JOINED_NETWORK) 
    511            {
    512              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_PERMIT_JOINING | DEVICE_STATE_IDENTIFYING, DEVICE_STATE_FLAGS_SET);
    513              
    514                    emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningPermitJoiningNetwork line 385 aurora-button-joining\n"); //MN
    515          
    516              
    517              permitJoinDuration = EMBER_AF_PLUGIN_EZMODE_COMMISSIONING_IDENTIFY_TIMEOUT;
    518              emAfPermitJoin(permitJoinDuration, TRUE);  // broadcast permit join
    519          
    520              emberEventControlSetDelayQS(emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl, permitJoinDuration * 4);
    521            }
    522          }
    523          
    524          /** @brief Permit joining
    525           *  
    526           *  Broadcasts a permit join request. Flashes the led to indicate this.
    527           *  Permit join is enabled for the PERMIT_JOIN_TIMEOUT period. A timer is 
    528           *  started to reset the led to the LED_JOINED state when the permit join 
    529           *  timeout expires.
    530           *  
    531           * @param none
    532           */

   \                                 In section .text, align 2, keep-with-next
    533          void emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler(void)
    534          {
   \                     emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    535            // Deavtivate the event
    536            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl);
   \   00000002   0x....             LDR.N    R1,??DataTable51_8
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    537          
    538            emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_PERMIT_JOINING | DEVICE_STATE_IDENTIFYING, DEVICE_STATE_FLAGS_CLEAR);
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x200C             MOVS     R0,#+12
   \   0000000C   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    539            
    540                  emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler line 409 aurora-button-joining\n"); //MN
   \   00000010   0xE8BD 0x4004      POP      {R2,LR}
   \   00000014   0x.... 0x....      ADR.W    R1,?_11
   \   00000018                      REQUIRE ?Subroutine0
   \   00000018                      ;; // Fall through to label ?Subroutine0
    541          
    542          }
    543          
    544          
    545          
    546          /** @brief Leave network
    547           *  
    548           *  Sends a leave network request and flashes the led with 
    549           *  the LED_NOT_JOINED.
    550           *
    551           * @param none
    552           */
    553          
    554          static void emberAfPluginAuroraButtonJoiningLeaveNetwork(void)
    555          {
    556            
    557                    emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningLeaveNetwork line 424 aurora-button-joining\n"); //MN
    558          
    559            
    560            int8u status;
    561          
    562            emberAfDebugPrint("Leaving network\r\n");
    563          
    564              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINED, DEVICE_STATE_FLAGS_CLEAR);
    565          
    566                        emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningLeaveNetwork line 438 aurora-button-joining\n"); //MN
    567          
    568              
    569              status = emberLeaveNetwork();
    570              
    571              switch (status)
    572              {
    573                case EMBER_INVALID_CALL :       // in case we are not part of a pan
    574                  emberAfDebugPrint("Error leaving network (%02X)\r\n", status);
    575                  break;
    576          
    577                case EMBER_SUCCESS:             // if everything is OK
    578                  emberAfDebugPrint("Success\r\n");
    579                    
    580                  break;
    581          
    582                default:                        // in case of a misc error
    583                  emberAfDebugPrint("Error (%02X)\r\n", status);
    584                  break;
    585              }
    586          }
    587          
    588          
    589          // ISR context functions!!!
    590          
    591          // WARNING: these functions are in ISR so we must do minimal
    592          // processing and not make any blocking calls (like printf)
    593          // or calls that take a long time.
    594          

   \                                 In section .text, align 2, keep-with-next
    595          boolean emberAfPluginAuroraButtonJoiningButtonPress(boolean state)
    596          {
   \                     emberAfPluginAuroraButtonJoiningButtonPress: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    597              // ISR CONTEXT!!!
    598              
    599              if (state == BUTTON_DOWN) 
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xBF0C             ITE      EQ 
   \   00000006   0x....             LDREQ.N  R0,??DataTable51_9
   \   00000008   0x....             LDRNE.N  R0,??DataTable51_2
    600              {
    601                  //emberAfDebugPrint("Button Down(%d)\r\n", state);
    602                  emberEventControlSetActive(emberAfPluginAuroraButtonJoiningButtonDownEventControl);
    603              } 
    604              else 
    605              {
    606                  //emberAfDebugPrint("Button Up(%d)\r\n", state); 
    607                  emberEventControlSetActive(emberAfPluginAuroraButtonJoiningButtonUpEventControl);
   \   0000000A   0x.... 0x....      BL       emEventControlSetActive
    608              }
    609          
    610              return TRUE;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
    611          }
    612          
    613          /** @brief Flash the LED
    614           *  
    615           * Sets the led state and calls the emberAfPluginAuroraButtonJoiningLedEventEventHandler().
    616           *  
    617           * @param cadence - the new led flashing cadence
    618           */

   \                                 In section .text, align 2, keep-with-next
    619          void emberAfPluginAuroraButtonJoiningInitialiseLeds(void)
    620          {
   \                     emberAfPluginAuroraButtonJoiningInitialiseLeds: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    621            emberAfDebugPrintln("Initialise Leds");
   \   00000002   0x.... 0x....      ADR.W    R1,?_12
   \   00000006   0x.... 0x....      BL       ?Subroutine2
    622            
    623            currentNetworkState = LED_NOT_JOINED;
   \                     ??CrossCallReturnLabel_7: (+1)
   \   0000000A   0x....             LDR.N    R1,??DataTable51_10
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    624            
    625            emberAfPluginAuroraButtonJoiningLedEventEventHandler();
   \   00000010   0xE8BD 0x4001      POP      {R0,LR}
   \   00000014   0x....             B.N      emberAfPluginAuroraButtonJoiningLedEventEventHandler
    626          }
    627          
    628          /** @brief Flash the LED
    629           *  
    630           * Sets the led state and calls the emberAfPluginAuroraButtonJoiningLedEventEventHandler().
    631           *  
    632           * @param cadence - the new led flashing cadence
    633           */

   \                                 In section .text, align 2, keep-with-next
    634          static void emberAfPluginAuroraButtonJoiningFlashLed(t_networkState newState)
    635          {
   \                     emberAfPluginAuroraButtonJoiningFlashLed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    636            
    637                emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningFlashLed line 506 aurora-button-joining\n"); //MN
   \   00000004   0x.... 0x....      ADR.W    R1,?_13
   \   00000008   0x.... 0x....      BL       ?Subroutine5
    638                emberAfDebugPrint("currentNetworkState set as: %d\n", newState); //MN
   \                     ??CrossCallReturnLabel_23: (+1)
   \   0000000C   0x4622             MOV      R2,R4
   \   0000000E   0x.... 0x....      ADR.W    R1,?_14
   \   00000012   0x.... 0x....      BL       ?Subroutine3
    639          
    640            currentNetworkState = newState;
   \                     ??CrossCallReturnLabel_14: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable51_10
   \   00000018   0x7004             STRB     R4,[R0, #+0]
    641            
    642            emberAfPluginAuroraButtonJoiningLedEventEventHandler();
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E                      REQUIRE emberAfPluginAuroraButtonJoiningLedEventEventHandler
   \   0000001E                      ;; // Fall through to label emberAfPluginAuroraButtonJoiningLedEventEventHandler
    643          }
    644          
    645          /** @brief Handle led timer event
    646           *  
    647           *  Flashes the led. Uses the ledCadence array where the on and off 
    648           *  times are defined for each cadence.
    649           *  
    650           * @param none
    651           */

   \                                 In section .text, align 2, keep-with-next
    652          void emberAfPluginAuroraButtonJoiningLedEventEventHandler(void)
    653          {
   \                     emberAfPluginAuroraButtonJoiningLedEventEventHandler: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    654              t_ledSettings *settings;
    655              int8u index;
    656              
    657              emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningLedEventEventControl);
   \   00000002   0x....             LDR.N    R4,??DataTable51_10
    658              
    659              settings = (t_ledSettings *)getLedSettings(currentNetworkState);
   \   00000004   0x.... 0x....      ADR.W    R2,ledSettings
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x7120             STRB     R0,[R4, #+4]
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x7820             LDRB     R0,[R4, #+0]
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_0: (+1)
   \   00000010   0xEB01 0x0381      ADD      R3,R1,R1, LSL #+2
   \   00000014   0x5C9D             LDRB     R5,[R3, R2]
   \   00000016   0x4285             CMP      R5,R0
   \   00000018   0xD004             BEQ.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_1
   \   0000001A   0x1C49             ADDS     R1,R1,#+1
   \   0000001C   0xB2C9             UXTB     R1,R1
   \   0000001E   0x2906             CMP      R1,#+6
   \   00000020   0xD3F6             BCC.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_0
   \   00000022   0xBDF1             POP      {R0,R4-R7,PC}
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_1: (+1)
   \   00000024   0x189D             ADDS     R5,R3,R2
    660              
    661              if (settings != (t_ledSettings *)NULL) 
    662              {
    663                  for (index = 0; index < MAX_LEDS; index++) 
   \   00000026   0x2600             MOVS     R6,#+0
    664                  {
    665                      if (settings->config[index].setting == LED_FLASH) 
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_2: (+1)
   \   00000028   0xEB05 0x0046      ADD      R0,R5,R6, LSL #+1
   \   0000002C   0x1937             ADDS     R7,R6,R4
   \   0000002E   0x7881             LDRB     R1,[R0, #+2]
   \   00000030   0x2902             CMP      R1,#+2
   \   00000032   0xD111             BNE.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_3
    666                      {
    667                          if (ledsCurrentStates[index] == LED_OFF) 
   \   00000034   0x78B9             LDRB     R1,[R7, #+2]
   \   00000036   0x7840             LDRB     R0,[R0, #+1]
   \   00000038   0x2900             CMP      R1,#+0
   \   0000003A   0xD103             BNE.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_4
    668                          {
    669                              halSetLed(settings->config[index].id);
   \   0000003C   0x.... 0x....      BL       halSetLed
    670                              ledsCurrentStates[index] = LED_ON;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0xE002             B.N      ??emberAfPluginAuroraButtonJoiningLedEventEvent_5
    671                          } 
    672                          else 
    673                          {
    674                              halClearLed(settings->config[index].id);
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_4: (+1)
   \   00000044   0x.... 0x....      BL       halClearLed
    675                              ledsCurrentStates[index] = LED_OFF;
   \   00000048   0x2000             MOVS     R0,#+0
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_5: (+1)
   \   0000004A   0x70B8             STRB     R0,[R7, #+2]
    676                          }    
    677                          emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningLedEventEventControl, LED_SWITCH_TIME);
   \   0000004C   0xF44F 0x71FA      MOV      R1,#+500
   \   00000050   0x1D20             ADDS     R0,R4,#+4
   \   00000052   0x.... 0x....      BL       emEventControlSetDelayMS
   \   00000056   0xE00A             B.N      ??emberAfPluginAuroraButtonJoiningLedEventEvent_6
    678                      } 
    679                      else if (settings->config[index].setting == LED_ON) 
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_3: (+1)
   \   00000058   0x7840             LDRB     R0,[R0, #+1]
   \   0000005A   0x2901             CMP      R1,#+1
   \   0000005C   0xD103             BNE.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_7
    680                      {
    681                          halClearLed(settings->config[index].id);
   \   0000005E   0x.... 0x....      BL       halClearLed
    682                          ledsCurrentStates[index] = LED_ON;
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xE002             B.N      ??emberAfPluginAuroraButtonJoiningLedEventEvent_8
    683                      } 
    684                      else 
    685                      {
    686                          halSetLed(settings->config[index].id);
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_7: (+1)
   \   00000066   0x.... 0x....      BL       halSetLed
    687                          ledsCurrentStates[index] = LED_OFF;
   \   0000006A   0x2000             MOVS     R0,#+0
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_8: (+1)
   \   0000006C   0x70B8             STRB     R0,[R7, #+2]
    688                      }
    689                  }
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_6: (+1)
   \   0000006E   0x1C76             ADDS     R6,R6,#+1
   \   00000070   0x2E02             CMP      R6,#+2
   \   00000072   0xDBD9             BLT.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_2
    690              }
    691          }
   \   00000074   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    692          
    693          static t_ledSettings *getLedSettings(t_networkState networkState)
    694          {
    695              int8u index;
    696              t_ledSettings *settings = (t_ledSettings *)NULL;
    697              
    698              for (index = 0; index < MAX_LED_STATES; index++) 
    699              {
    700                  if (ledSettings[index].state == networkState) 
    701                  {
    702                      //emberAfDebugPrint("Index: (%d) Setting : (%d) Network State: (%d)\r\n", index, settings->config[index].setting, currentNetworkState);//MN
    703                      //emberAfDebugPrint("State: (%d) Network State: (%d) Index: (%d)\r\n", ledSettings[index].state, currentNetworkState, index);//MN
    704                      settings = (t_ledSettings *)&ledSettings[index];
    705                      break;
    706                  }
    707              } 
    708              
    709              return settings;
    710          }
    711          
    712          /** @brief Cli join command
    713           *  
    714           *  Calls emberAfPluginAuroraButtonJoiningJoinNetwork()
    715           *  
    716           * @param none
    717           */

   \                                 In section .text, align 2, keep-with-next
    718          void cliJoin(void)
    719          {
    720            emberAfPluginAuroraButtonJoiningReset();
   \                     cliJoin: (+1)
   \   00000000   0x....             B.N      emberAfPluginAuroraButtonJoiningReset
    721          }
    722          

   \                                 In section .text, align 2, keep-with-next
    723          void stackStatusEventHandler(void)
    724          {
   \                     stackStatusEventHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    725            
    726            emberAfDebugPrint("Reached stackStatusEventHandler line 591 aurora-button-joining\n"); //MN
   \   00000002   0x.... 0x....      ADR.W    R1,?_15
   \   00000006   0x.... 0x....      BL       ?Subroutine5
    727          
    728            
    729            emberEventControlSetInactive(stackStatusEventControl);
   \                     ??CrossCallReturnLabel_22: (+1)
   \   0000000A   0x....             LDR.N    R0,??DataTable51_7
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x7101             STRB     R1,[R0, #+4]
    730            
    731            // Send permit join, if necessary
    732            if (joiningFLag) 
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0xB160             CBZ.N    R0,??stackStatusEventHandler_0
    733            {
    734              emAfPermitJoin(EMBER_AF_PLUGIN_EZMODE_COMMISSIONING_IDENTIFY_TIMEOUT, TRUE);  // broadcast permit join
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x20B4             MOVS     R0,#+180
   \   00000018   0x.... 0x....      BL       emAfPermitJoin
    735              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_PERMIT_JOINING, DEVICE_STATE_FLAGS_SET);
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2008             MOVS     R0,#+8
   \   00000020   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    736              
    737                emberAfDebugPrint("Reached stackStatusEventHandler line 602 aurora-button-joining\n"); //MN
   \   00000024   0xE8BD 0x4004      POP      {R2,LR}
   \   00000028   0x.... 0x....      ADR.W    R1,?_16
   \   0000002C   0x....             B.N      ?Subroutine0
    738          
    739              
    740            }
    741            
    742          }
   \                     ??stackStatusEventHandler_0: (+1)
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return
    743          
    744          /** @brief Set the radio power and power mode
    745           *
    746           *
    747           */

   \                                 In section .text, align 2, keep-with-next
    748          void setRadioPowerAndMode(void)
    749          {
   \                     setRadioPowerAndMode: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB087             SUB      SP,SP,#+28
    750              int8u board[17] = {0};
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x2114             MOVS     R1,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    751              int8s txPower = 8;
    752              int16u txPowerMode = EMBER_TX_POWER_MODE_DEFAULT;
    753              int16u temp16u;
    754          
    755              halCommonGetToken(board,TOKEN_MFG_BOARD_NAME);
   \   0000000E   0x....             LDR.N    R0,??DataTable51_11
   \   00000010   0x....             LDR.N    R7,??DataTable51_12  ;; 0x4000b804
   \   00000012   0x8801             LDRH     R1,[R0, #+0]
   \   00000014   0x2310             MOVS     R3,#+16
   \   00000016   0x227F             MOVS     R2,#+127
   \   00000018   0xA801             ADD      R0,SP,#+4
   \   0000001A   0x.... 0x....      BL       halInternalGetTokenData
    756            
    757              if ((MEMCOMPARE(&board[8],"LRS", 3) == 0) || ((MEMCOMPARE(&board[10],"LRS", 3) == 0))) 
   \   0000001E   0x....             ADR.N    R5,??DataTable51  ;; "LRS"
   \   00000020   0x2203             MOVS     R2,#+3
   \   00000022   0x4629             MOV      R1,R5
   \   00000024   0xA803             ADD      R0,SP,#+12
   \   00000026   0x.... 0x....      BL       halCommonMemCompare
   \   0000002A   0xF04F 0x0808      MOV      R8,#+8
   \   0000002E   0x2400             MOVS     R4,#+0
   \   00000030   0xF06F 0x0940      MVN      R9,#+64
   \   00000034   0xF64F 0x760F      MOVW     R6,#+65295
   \   00000038   0xB118             CBZ.N    R0,??setRadioPowerAndMode_0
   \   0000003A   0x2203             MOVS     R2,#+3
   \   0000003C   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_27: (+1)
   \   00000040   0xB970             CBNZ.N   R0,??setRadioPowerAndMode_1
    758              {
    759                  GPIO_PBCFGL &= 0xFFF0;
   \                     ??setRadioPowerAndMode_0: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable51_13  ;; 0x4000b400
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0xF64F 0x72F0      MOVW     R2,#+65520
   \   0000004A   0x4011             ANDS     R1,R2,R1
   \   0000004C   0x6001             STR      R1,[R0, #+0]
    760                  GPIO_PBCFGL |= 0x0001;
    761                  GPIO_PBSET = 0x00000001;
    762                  GPIO_PCCFGH &=  0xFF0F;
    763                  GPIO_PCCFGH |=  0x0090;
    764                  txPower = -7;                   
   \   0000004E   0xF06F 0x0806      MVN      R8,#+6
   \   00000052   0x6801             LDR      R1,[R0, #+0]
   \   00000054   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000058   0x6001             STR      R1,[R0, #+0]
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x6101             STR      R1,[R0, #+16]
   \   0000005E   0xE00A             B.N      ??setRadioPowerAndMode_2
    765                  emRadioSetEdCcaThreshold(-65);  // M&M - this increses the RSSI threshold seen by the CSMA for the modules with LNA (by 10dBm)
    766              } 
    767              /* GB ERS Not supported
    768              else if ((MEMCOMPARE(&board[8],"ERS",3) == 0) || ((MEMCOMPARE(&board[10],"ERS",3) == 0))) 
    769              {
    770                  GPIO_PBCFGL &= 0xFFF0;
    771                  GPIO_PBCFGL |= 0x0001;
    772                  GPIO_PBCFGH &= 0xFF0F;
    773                  GPIO_PBCFGL |= 0x0010;
    774                  GPIO_PBSET = 0x00000021;
    775                  GPIO_PCCFGH &=  0xF00F;
    776                  GPIO_PCCFGH |=  0x0990;
    777                  txPower = -6;
    778                  emRadioSetEdCcaThreshold(-65); // M&M - this increses the RSSI threshold seen by the CSMA for the modules with LNA (by 10dBm)
    779              }
    780              */ 
    781              else if ((MEMCOMPARE(&board[8],"LR", 2) == 0) || ((MEMCOMPARE(&board[10],"LR", 2) == 0))) 
   \                     ??setRadioPowerAndMode_1: (+1)
   \   00000060   0x....             ADR.N    R5,??DataTable51_1  ;; 0x4C, 0x52, 0x00, 0x00
   \   00000062   0x2202             MOVS     R2,#+2
   \   00000064   0x4629             MOV      R1,R5
   \   00000066   0xA803             ADD      R0,SP,#+12
   \   00000068   0x.... 0x....      BL       halCommonMemCompare
   \   0000006C   0xB118             CBZ.N    R0,??setRadioPowerAndMode_2
   \   0000006E   0x2202             MOVS     R2,#+2
   \   00000070   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_26: (+1)
   \   00000074   0xB948             CBNZ.N   R0,??setRadioPowerAndMode_3
    782              {
    783                  GPIO_PCCFGH &=  0xFF0F;
   \                     ??setRadioPowerAndMode_2: (+1)
   \   00000076   0x6838             LDR      R0,[R7, #+0]
   \   00000078   0x4030             ANDS     R0,R6,R0
   \   0000007A   0x6038             STR      R0,[R7, #+0]
    784                  GPIO_PCCFGH |=  0x0090;
   \   0000007C   0x6838             LDR      R0,[R7, #+0]
   \   0000007E   0xF040 0x0090      ORR      R0,R0,#0x90
   \   00000082   0x6038             STR      R0,[R7, #+0]
    785                  emRadioSetEdCcaThreshold(-65); // M&M - this increses the RSSI threshold seen by the CSMA for the modules with LNA (by 10dBm)
   \   00000084   0x4648             MOV      R0,R9
   \   00000086   0x.... 0x....      BL       emRadioSetEdCcaThreshold
    786              }
    787          
    788              halCommonGetToken(&temp16u, TOKEN_MFG_PHY_CONFIG);
   \                     ??setRadioPowerAndMode_3: (+1)
   \   0000008A   0x....             LDR.N    R0,??DataTable51_14
   \   0000008C   0x8801             LDRH     R1,[R0, #+0]
   \   0000008E   0x2302             MOVS     R3,#+2
   \   00000090   0x227F             MOVS     R2,#+127
   \   00000092   0xA800             ADD      R0,SP,#+0
   \   00000094   0x.... 0x....      BL       halInternalGetTokenData
    789              if (!(temp16u & 0x0002)) 
   \   00000098   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
    790              {
    791                  txPowerMode |= EMBER_TX_POWER_MODE_ALTERNATE;
    792              }
    793          
    794              if (txPower > 3)
    795              {
    796                  txPowerMode |= EMBER_TX_POWER_MODE_BOOST;
    797              }
    798          
    799              emberAfDebugPrint("setRadioPowerAndMode txPower %d\r\n", txPower);
   \   0000009C   0x.... 0x....      ADR.W    R1,?_20
   \   000000A0   0x0780             LSLS     R0,R0,#+30
   \   000000A2   0xBF58             IT       PL 
   \   000000A4   0x2402             MOVPL    R4,#+2
   \   000000A6   0x4642             MOV      R2,R8
   \   000000A8   0x2A04             CMP      R2,#+4
   \   000000AA   0xBFA8             IT       GE 
   \   000000AC   0xF044 0x0401      ORRGE    R4,R4,#0x1
   \   000000B0   0x.... 0x....      BL       ?Subroutine3
    800              emberAfDebugPrint("setRadioPowerAndMode txPowerMode %d\r\n", txPowerMode);
   \                     ??CrossCallReturnLabel_13: (+1)
   \   000000B4   0x4622             MOV      R2,R4
   \   000000B6   0x.... 0x....      ADR.W    R1,?_21
   \   000000BA   0x.... 0x....      BL       ?Subroutine3
    801            
    802              emberSetRadioPower(txPower);
   \                     ??CrossCallReturnLabel_12: (+1)
   \   000000BE   0x4640             MOV      R0,R8
   \   000000C0   0x.... 0x....      BL       emberSetRadioPower
    803              emberSetTxPowerMode(txPowerMode);
   \   000000C4   0x4620             MOV      R0,R4
   \   000000C6   0x.... 0x....      BL       emberSetTxPowerMode
    804            
    805              emberAfDebugPrint("setRadioPowerAndMode read back power %d\r\n", emberGetRadioPower());
   \   000000CA   0x.... 0x....      BL       emberGetRadioPower
   \   000000CE   0x4602             MOV      R2,R0
   \   000000D0   0x.... 0x....      ADR.W    R1,?_22
   \   000000D4   0x.... 0x....      BL       ?Subroutine3
    806              emberAfDebugPrint("setRadioPowerAndMode read back power mode %d\r\n", emberGetTxPowerMode());
   \                     ??CrossCallReturnLabel_11: (+1)
   \   000000D8   0x.... 0x....      BL       emberGetTxPowerMode
   \   000000DC   0x4602             MOV      R2,R0
   \   000000DE   0x.... 0x....      ADR.W    R1,?_23
   \   000000E2   0x.... 0x....      BL       ?Subroutine3
    807          }
   \                     ??CrossCallReturnLabel_10: (+1)
   \   000000E6   0xB007             ADD      SP,SP,#+28
   \   000000E8   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0x4629             MOV      R1,R5
   \   00000002   0xF10D 0x000E      ADD      R0,SP,#+14
   \   00000006   0x.... 0x....      B.W      halCommonMemCompare
    808          

   \                                 In section .text, align 2, keep-with-next
    809          void emberAfPluginAuroraButtonJoiningUpdateStatusLed(void)
    810          {
   \                     emberAfPluginAuroraButtonJoiningUpdateStatusLed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    811            
    812              //emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningUpdateStatusLed line 677 aurora-button-joining\n"); //MN
    813          
    814              static int8u lastDeviceStateFlags = DEVICE_STATE_CLEAR;
    815            
    816            //if the DEVICE_STATE_NETWORK_UNAVAILABLE, don't say that the lastDeviceStateFlags is clear MN
    817            
    818          
    819          //  if (deviceStateFlags == DEVICE_STATE_NETWORK_UNAVAILABLE)
    820            //{
    821              //lastDeviceStateFlags = deviceStateFlags;
    822             // emberAfDebugPrintln("keep DEVICE_STATE_NETWORK_UNAVAILABLE (%x)\r\n", deviceStateFlags); MN
    823          
    824            //}
    825                //  emberAfDebugPrintln("deviceStateFlags b4 if update status led: (%x)\r\n", deviceStateFlags);
    826                  //emberAfDebugPrintln("lastDeviceStateFlags: (%x)\r\n", lastDeviceStateFlags);
    827          
    828            
    829            if (deviceStateFlags != lastDeviceStateFlags) //if the device state flags have changed... MN
   \   00000002   0x....             LDR.N    R4,??DataTable51_5
   \   00000004   0x7822             LDRB     R2,[R4, #+0]
   \   00000006   0x78A0             LDRB     R0,[R4, #+2]
   \   00000008   0x4282             CMP      R2,R0
   \   0000000A   0xD043             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_0
    830            {
    831              emberAfDebugPrintln("update status led: (%x)\r\n", deviceStateFlags);
   \   0000000C   0x.... 0x....      ADR.W    R1,?_24
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       emberAfPrintln
    832              
    833              switch(deviceStateFlags) 
   \   00000016   0x7822             LDRB     R2,[R4, #+0]
   \   00000018   0x0010             MOVS     R0,R2
   \   0000001A   0xD01A             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_1
   \   0000001C   0x2A01             CMP      R2,#+1
   \   0000001E   0xD012             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_2
   \   00000020   0x2A02             CMP      R2,#+2
   \   00000022   0xD01C             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3
   \   00000024   0x2A06             CMP      R2,#+6
   \   00000026   0xD020             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_4
   \   00000028   0x2A0A             CMP      R2,#+10
   \   0000002A   0xD024             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_5
   \   0000002C   0x2A0E             CMP      R2,#+14
   \   0000002E   0xD01C             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_4
   \   00000030   0x2A10             CMP      R2,#+16
   \   00000032   0xD002             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_6
   \   00000034   0x2A11             CMP      R2,#+17
   \   00000036   0xD006             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_2
   \   00000038   0xE025             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_7
    834              {
    835                case DEVICE_STATE_NETWORK_UNAVAILABLE:
    836                      emberAfDebugPrintln("Device State is DEVICE_STATE_NETWORK_UNAVAILABLE\n"); //MN
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_6: (+1)
   \   0000003A   0x.... 0x....      ADR.W    R1,?_25
   \   0000003E   0x.... 0x....      BL       ?Subroutine2
    837          
    838                  emberAfPluginAuroraButtonJoiningFlashLed(LED_NWK_UNAVAILABLE);
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0xE01C             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_8
    839                  
    840             //  emberAfDebugPrintln("lamps flash twice to show entering pairing mode"); //MN
    841          
    842                  
    843          //emberAfPluginAuroraButtonJoiningJoinNetwork(); //this will put AONE into pairing mode if it is not already joined at power on MN
    844                  
    845          
    846                  break;      
    847                
    848                case DEVICE_STATE_NETWORK_UNAVAILABLE | DEVICE_STATE_JOINING:
    849                case DEVICE_STATE_JOINING:
    850                  emberAfDebugPrintln("Device State is DEVICE_STATE_JOINING\n"); //MN
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_2: (+1)
   \   00000046   0x.... 0x....      ADR.W    R1,?_26
   \   0000004A   0x.... 0x....      BL       ?Subroutine2
    851                  emberAfPluginAuroraButtonJoiningFlashLed(LED_JOINING);
   \                     ??CrossCallReturnLabel_5: (+1)
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0xE016             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_8
    852                  break;
    853            
    854                case DEVICE_STATE_CLEAR:
    855                          emberAfDebugPrintln("Device State is DEVICE_STATE_CLEAR\n"); //MN
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_1: (+1)
   \   00000052   0x.... 0x....      ADR.W    R1,?_27
   \   00000056   0x.... 0x....      BL       ?Subroutine2
    856          
    857                  emberAfPluginAuroraButtonJoiningFlashLed(LED_NOT_JOINED);
   \                     ??CrossCallReturnLabel_4: (+1)
   \   0000005A   0x2003             MOVS     R0,#+3
   \   0000005C   0xE010             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_8
    858                  break;
    859                  
    860                case DEVICE_STATE_JOINED:
    861                                  emberAfDebugPrintln("Device State is DEVICE_STATE_JOINED\n"); //MN
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3: (+1)
   \   0000005E   0x.... 0x....      ADR.W    R1,?_28
   \   00000062   0x.... 0x....      BL       emberAfPrintln
    862          
    863          
    864                  emberAfPluginAuroraButtonJoiningFlashLed(LED_JOINED);
   \   00000066   0x2002             MOVS     R0,#+2
   \   00000068   0xE00A             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_8
    865                  break;
    866                
    867                case DEVICE_STATE_JOINED | DEVICE_STATE_IDENTIFYING:
    868                case DEVICE_STATE_JOINED | DEVICE_STATE_IDENTIFYING | DEVICE_STATE_PERMIT_JOINING:
    869                                          emberAfDebugPrintln("Device State is       case DEVICE_STATE_JOINED | DEVICE_STATE_IDENTIFYING | DEVICE_STATE_PERMIT_JOINING:\n"); //MN
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_4: (+1)
   \   0000006A   0x.... 0x....      ADR.W    R1,?_29
   \   0000006E   0x.... 0x....      BL       ?Subroutine2
    870          
    871                  emberAfPluginAuroraButtonJoiningFlashLed(LED_IDENTIFY);
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000072   0x2007             MOVS     R0,#+7
   \   00000074   0xE004             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_8
    872                  break;
    873          
    874                case DEVICE_STATE_JOINED | DEVICE_STATE_PERMIT_JOINING:
    875                                                  emberAfDebugPrintln("Device State is        case DEVICE_STATE_JOINED | DEVICE_STATE_PERMIT_JOINING:\n"); //MN
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_5: (+1)
   \   00000076   0x.... 0x....      ADR.W    R1,?_30
   \   0000007A   0x.... 0x....      BL       ?Subroutine2
    876          
    877                  emberAfPluginAuroraButtonJoiningFlashLed(LED_PERMIT_JOINING);
   \                     ??CrossCallReturnLabel_2: (+1)
   \   0000007E   0x2004             MOVS     R0,#+4
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_8: (+1)
   \   00000080   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningFlashLed
    878                  break;
   \   00000084   0xE004             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_9
    879          
    880                default:
    881                  emberAfDebugPrintln("update status led (default): (%x)\r\n", deviceStateFlags);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_7: (+1)
   \   00000086   0x.... 0x....      ADR.W    R1,?_31
   \   0000008A   0x2002             MOVS     R0,#+2
   \   0000008C   0x.... 0x....      BL       emberAfPrintln
    882                  break;
    883              }
    884          
    885              lastDeviceStateFlags = deviceStateFlags;
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_9: (+1)
   \   00000090   0x7820             LDRB     R0,[R4, #+0]
   \   00000092   0x70A0             STRB     R0,[R4, #+2]
    886            }
    887            
    888          }
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_0: (+1)
   \   00000094   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .data, align 1
   \                     deviceStateFlags:
   \   00000000   0x10               DC8 16
   \   00000001   0x00               DC8 0
   \   00000002   0x00               DC8 0

   \                                 In section .data, align 4
   \                     deviceStateText:
   \   00000000   0x4A 0x6F          DC8 "Joining"
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x4A 0x6F          DC8 "Joined"
   \              0x69 0x6E    
   \              0x65 0x64    
   \              0x00         
   \   0000001B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000028   0x49 0x64          DC8 "Identifying"
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000003C   0x50 0x65          DC8 "Permit Joining"
   \              0x72 0x6D    
   \              0x69 0x74    
   \              0x20 0x4A    
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x00         
   \   0000004B   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
   \   00000050   0x4E 0x65          DC8 "Network Unavailable"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x55 0x6E    
   \              0x61 0x76    
   \              0x61 0x69    
   \              0x6C 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    
    889          

   \                                 In section .text, align 4, keep-with-next
    890          void emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(int8u newState, boolean set)
    891          {
   \                     emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    892            
    893              emberAfDebugPrintln("Reached emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags line 756 aurora-button-joining\n"); //MN
   \   00000006   0x.... 0x....      ADR.W    R1,?_32
   \   0000000A   0x4E0B             LDR.N    R6,??emberAfPluginAuroraButtonJoiningUpdateDeviceS_0
   \   0000000C   0x.... 0x....      BL       ?Subroutine2
    894          
    895              emberAfDebugPrintln("@line 769 deviceStateFlags are: (%x)\r\n", deviceStateFlags); //MN
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000010   0x7832             LDRB     R2,[R6, #+0]
   \   00000012   0x.... 0x....      ADR.W    R1,?_33
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0x.... 0x....      BL       emberAfPrintln
    896              emberAfDebugPrintln("new state: (%x) set is: (%x)\r\n", newState, set); //MN
   \   0000001C   0x462B             MOV      R3,R5
   \   0000001E   0x4622             MOV      R2,R4
   \   00000020   0x.... 0x....      ADR.W    R1,?_34
   \   00000024   0x2002             MOVS     R0,#+2
   \   00000026   0x.... 0x....      BL       emberAfPrintln
    897          
    898              
    899            if (set) 
   \   0000002A   0x7830             LDRB     R0,[R6, #+0]
   \   0000002C   0xB135             CBZ.N    R5,??emberAfPluginAuroraButtonJoiningUpdateDeviceS_1
    900            {
    901              deviceStateFlags |= newState;
   \   0000002E   0x4320             ORRS     R0,R4,R0
   \   00000030   0x7030             STRB     R0,[R6, #+0]
    902              
    903                  emberAfDebugPrintln("in deviceStateFlags |= newState;"); //MN
   \   00000032   0x.... 0x....      ADR.W    R1,?_35
   \   00000036   0xE005             B.N      ??emberAfPluginAuroraButtonJoiningUpdateDeviceS_2
   \                     ??emberAfPluginAuroraButtonJoiningUpdateDeviceS_0:
   \   00000038   0x........         DC32     deviceStateFlags
    904          
    905              
    906            } 
    907            else 
    908            {
    909              deviceStateFlags &= ~(newState);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateDeviceS_1: (+1)
   \   0000003C   0x43A0             BICS     R0,R0,R4
   \   0000003E   0x7030             STRB     R0,[R6, #+0]
    910              
    911                      emberAfDebugPrintln("in deviceStateFlags &= ~(newState);"); //MN
   \   00000040   0x.... 0x....      ADR.W    R1,?_36
    912          
    913              
    914            }
   \                     ??emberAfPluginAuroraButtonJoiningUpdateDeviceS_2: (+1)
   \   00000044   0x.... 0x....      BL       ?Subroutine2
    915            
    916            emberAfDebugPrintln("@line 779 deviceStateFlags are: (%x)\r\n", deviceStateFlags); //MN
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000048   0x7832             LDRB     R2,[R6, #+0]
   \   0000004A   0x.... 0x....      ADR.W    R1,?_37
   \   0000004E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000052                      REQUIRE ?Subroutine1
   \   00000052                      ;; // Fall through to label ?Subroutine1
    917          
    918          }
    919          

   \                                 In section .text, align 2, keep-with-next
    920          void sendMatchDescriptor(void)
    921          {
    922            EmberAfStatus status;
    923            
    924            status = emAfSendMatchDescriptor(0x0000, 0x0104, 0x000, TRUE);
                          ^
Warning[Pe188]: enumerated type mixed with another type

    EmberAfStatus status;
                  ^
"C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c",922  Warning[Pe550]: 
          variable "status" was set but never used

  static void emberAfPluginAuroraButtonJoiningPermitJoiningNetwork(void)
              ^
"C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c",501  Warning[Pe177]: 
          function "emberAfPluginAuroraButtonJoiningPermitJoiningNetwork" was
          declared but never referenced

  static void emberAfPluginAuroraButtonJoiningLeaveNetwork(void)
              ^
"C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c",554  Warning[Pe177]: 
          function "emberAfPluginAuroraButtonJoiningLeaveNetwork" was declared
          but never referenced

  static void emberAfPluginAuroraButtonJoiningJoinNetwork(void)
              ^
"C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c",455  Warning[Pe177]: 
          function "emberAfPluginAuroraButtonJoiningJoinNetwork" was declared
          but never referenced
   \                     sendMatchDescriptor: (+1)
   \   00000000   0x2301             MOVS     R3,#+1
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0xF44F 0x7182      MOV      R1,#+260
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      B.W      emAfSendMatchDescriptor
    925          }
    926          
    927          /** @brief Poll Completed
    928           *
    929           * This function is called by the application framework after a poll is
    930           * completed.
    931           *
    932           * @param status Return status of a completed poll operation  Ver.: always
    933           */

   \                                 In section .text, align 2, keep-with-next
    934          void emberAfPluginEndDeviceSupportPollCompletedCallback(EmberStatus status)
    935          {
    936            
    937          }
   \                     emberAfPluginEndDeviceSupportPollCompletedCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   0x4C 0x52          DC8      "LRS"
   \              0x53 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_1:
   \   00000000   0x4C 0x52          DC8      0x4C, 0x52, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_2:
   \   00000000   0x........         DC32     emberAfPluginAuroraButtonJoiningButtonUpEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_3:
   \   00000000   0x........         DC32     buttonDownCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_4:
   \   00000000   0x........         DC32     buttonSequence

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_5:
   \   00000000   0x........         DC32     deviceStateFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_6:
   \   00000000   0x........         DC32     nwkNewJoinPending

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_7:
   \   00000000   0x........         DC32     joiningFLag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_8:
   \   00000000   0x........         DC32     emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_9:
   \   00000000   0x........         DC32     buttonDownCount+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_10:
   \   00000000   0x........         DC32     currentNetworkState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_11:
   \   00000000   0x........         DC32     TOKEN_MFG_BOARD_NAME

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_12:
   \   00000000   0x4000B804         DC32     0x4000b804

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_13:
   \   00000000   0x4000B400         DC32     0x4000b400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_14:
   \   00000000   0x........         DC32     TOKEN_MFG_PHY_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x42 0x75          DC8 "Button release (%d)\015\012"
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x20 0x72    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x20 0x28    
   \              0x25 0x64    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x4D 0x61          DC8 "Match: %d\015\012"
   \              0x74 0x63    
   \              0x68 0x3A    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x4E 0x6F          DC8 "No match\015\012"
   \              0x20 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x52 0x65          DC8 "Reached checkIfPaired\012"
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \              0x63 0x68    
   \              0x65 0x63    
   \              0x6B 0x49    
   \              0x66 0x50    
   \              0x61 0x69    
   \              0x72 0x65    
   \              0x64 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x40 0x6C          DC8 "@line 316, device state is: %x\012"
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x33 0x31    
   \              0x36 0x2C    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x69 0x73    
   \              0x3A 0x20    
   \              0x25 0x78    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 41H, 75H, 72H
   \              0x67 0x69    
   \              0x6E 0x41    
   \              0x75 0x72    
   \   00000018   0x6F 0x72          DC8 6FH, 72H, 61H, 42H, 75H, 74H, 74H, 6FH
   \              0x61 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \   00000020   0x6E 0x4A          DC8 6EH, 4AH, 6FH, 69H, 6EH, 69H, 6EH, 67H
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \   00000028   0x52 0x65          DC8 52H, 65H, 73H, 65H, 74H, 20H, 6CH, 69H
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x6C 0x69    
   \   00000030   0x6E 0x65          DC8 6EH, 65H, 20H, 33H, 33H, 38H, 20H, 61H
   \              0x20 0x33    
   \              0x33 0x38    
   \              0x20 0x61    
   \   00000038   0x75 0x72          DC8 75H, 72H, 6FH, 72H, 61H, 2DH, 62H, 75H
   \              0x6F 0x72    
   \              0x61 0x2D    
   \              0x62 0x75    
   \   00000040   0x74 0x74          DC8 74H, 74H, 6FH, 6EH, 2DH, 6AH, 6FH, 69H
   \              0x6F 0x6E    
   \              0x2D 0x6A    
   \              0x6F 0x69    
   \   00000048   0x6E 0x69          DC8 6EH, 69H, 6EH, 67H, 0AH, 0
   \              0x6E 0x67    
   \              0x0A 0x00    
   \   0000004E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x46 0x69          DC8 "Find joinable networks"
   \              0x6E 0x64    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x73    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x52 0x45          DC8 "REBOOT NOW EMBER_JOINED_NETWORK"
   \              0x42 0x4F    
   \              0x4F 0x54    
   \              0x20 0x4E    
   \              0x4F 0x57    
   \              0x20 0x45    
   \              0x4D 0x42    
   \              0x45 0x52    
   \              0x5F 0x4A    
   \              0x4F 0x49    
   \              0x4E 0x45    
   \              0x44 0x5F    
   \              0x4E 0x45    
   \              0x54 0x57    
   \              0x4F 0x52    
   \              0x4B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x4A 0x6F          DC8 "Joining network"
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x4C 0x65          DC8 "Leaving network"
   \              0x61 0x76    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x4A 0x6F          DC8 "Join request, nwk state=%x"
   \              0x69 0x6E    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x2C 0x20    
   \              0x6E 0x77    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x3D    
   \              0x25 0x78    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 41H, 75H, 72H
   \              0x67 0x69    
   \              0x6E 0x41    
   \              0x75 0x72    
   \   00000018   0x6F 0x72          DC8 6FH, 72H, 61H, 42H, 75H, 74H, 74H, 6FH
   \              0x61 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \   00000020   0x6E 0x4A          DC8 6EH, 4AH, 6FH, 69H, 6EH, 69H, 6EH, 67H
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \   00000028   0x50 0x65          DC8 50H, 65H, 72H, 6DH, 69H, 74H, 4AH, 6FH
   \              0x72 0x6D    
   \              0x69 0x74    
   \              0x4A 0x6F    
   \   00000030   0x69 0x6E          DC8 69H, 6EH, 69H, 6EH, 67H, 45H, 78H, 70H
   \              0x69 0x6E    
   \              0x67 0x45    
   \              0x78 0x70    
   \   00000038   0x69 0x72          DC8 69H, 72H, 79H, 45H, 76H, 65H, 6EH, 74H
   \              0x79 0x45    
   \              0x76 0x65    
   \              0x6E 0x74    
   \   00000040   0x48 0x61          DC8 48H, 61H, 6EH, 64H, 6CH, 65H, 72H, 20H
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x20    
   \   00000048   0x6C 0x69          DC8 6CH, 69H, 6EH, 65H, 20H, 34H, 30H, 39H
   \              0x6E 0x65    
   \              0x20 0x34    
   \              0x30 0x39    
   \   00000050   0x20 0x61          DC8 20H, 61H, 75H, 72H, 6FH, 72H, 61H, 2DH
   \              0x75 0x72    
   \              0x6F 0x72    
   \              0x61 0x2D    
   \   00000058   0x62 0x75          DC8 62H, 75H, 74H, 74H, 6FH, 6EH, 2DH, 6AH
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x2D 0x6A    
   \   00000060   0x6F 0x69          DC8 6FH, 69H, 6EH, 69H, 6EH, 67H, 0AH, 0
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x49 0x6E          DC8 "Initialise Leds"
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x69    
   \              0x73 0x65    
   \              0x20 0x4C    
   \              0x65 0x64    
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 41H, 75H, 72H
   \              0x67 0x69    
   \              0x6E 0x41    
   \              0x75 0x72    
   \   00000018   0x6F 0x72          DC8 6FH, 72H, 61H, 42H, 75H, 74H, 74H, 6FH
   \              0x61 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \   00000020   0x6E 0x4A          DC8 6EH, 4AH, 6FH, 69H, 6EH, 69H, 6EH, 67H
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \   00000028   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 4CH, 65H, 64H
   \              0x61 0x73    
   \              0x68 0x4C    
   \              0x65 0x64    
   \   00000030   0x20 0x6C          DC8 20H, 6CH, 69H, 6EH, 65H, 20H, 35H, 30H
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x35 0x30    
   \   00000038   0x36 0x20          DC8 36H, 20H, 61H, 75H, 72H, 6FH, 72H, 61H
   \              0x61 0x75    
   \              0x72 0x6F    
   \              0x72 0x61    
   \   00000040   0x2D 0x62          DC8 2DH, 62H, 75H, 74H, 74H, 6FH, 6EH, 2DH
   \              0x75 0x74    
   \              0x74 0x6F    
   \              0x6E 0x2D    
   \   00000048   0x6A 0x6F          DC8 6AH, 6FH, 69H, 6EH, 69H, 6EH, 67H, 0AH
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x0A    
   \   00000050   0x00               DC8 0
   \   00000051   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x63 0x75          DC8 "currentNetworkState set as: %d\012"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x4E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x61 0x73    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x73 0x74          DC8 73H, 74H, 61H, 63H, 6BH, 53H, 74H, 61H
   \              0x61 0x63    
   \              0x6B 0x53    
   \              0x74 0x61    
   \   00000010   0x74 0x75          DC8 74H, 75H, 73H, 45H, 76H, 65H, 6EH, 74H
   \              0x73 0x45    
   \              0x76 0x65    
   \              0x6E 0x74    
   \   00000018   0x48 0x61          DC8 48H, 61H, 6EH, 64H, 6CH, 65H, 72H, 20H
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x20    
   \   00000020   0x6C 0x69          DC8 6CH, 69H, 6EH, 65H, 20H, 35H, 39H, 31H
   \              0x6E 0x65    
   \              0x20 0x35    
   \              0x39 0x31    
   \   00000028   0x20 0x61          DC8 20H, 61H, 75H, 72H, 6FH, 72H, 61H, 2DH
   \              0x75 0x72    
   \              0x6F 0x72    
   \              0x61 0x2D    
   \   00000030   0x62 0x75          DC8 62H, 75H, 74H, 74H, 6FH, 6EH, 2DH, 6AH
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x2D 0x6A    
   \   00000038   0x6F 0x69          DC8 6FH, 69H, 6EH, 69H, 6EH, 67H, 0AH, 0
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x73 0x74          DC8 73H, 74H, 61H, 63H, 6BH, 53H, 74H, 61H
   \              0x61 0x63    
   \              0x6B 0x53    
   \              0x74 0x61    
   \   00000010   0x74 0x75          DC8 74H, 75H, 73H, 45H, 76H, 65H, 6EH, 74H
   \              0x73 0x45    
   \              0x76 0x65    
   \              0x6E 0x74    
   \   00000018   0x48 0x61          DC8 48H, 61H, 6EH, 64H, 6CH, 65H, 72H, 20H
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x20    
   \   00000020   0x6C 0x69          DC8 6CH, 69H, 6EH, 65H, 20H, 36H, 30H, 32H
   \              0x6E 0x65    
   \              0x20 0x36    
   \              0x30 0x32    
   \   00000028   0x20 0x61          DC8 20H, 61H, 75H, 72H, 6FH, 72H, 61H, 2DH
   \              0x75 0x72    
   \              0x6F 0x72    
   \              0x61 0x2D    
   \   00000030   0x62 0x75          DC8 62H, 75H, 74H, 74H, 6FH, 6EH, 2DH, 6AH
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x2D 0x6A    
   \   00000038   0x6F 0x69          DC8 6FH, 69H, 6EH, 69H, 6EH, 67H, 0AH, 0
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode txPower %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x74    
   \              0x78 0x50    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode txPowerMode %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x74    
   \              0x78 0x50    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode read back power %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x20    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x20 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode read back power mode %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x20    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x20 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x75 0x70          DC8 "update status led: (%x)\015\012"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x44 0x65          DC8 "Device State is DEVICE_STATE_NETWORK_UNAVAILABLE\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x5F 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \              0x5F 0x4E    
   \              0x45 0x54    
   \              0x57 0x4F    
   \              0x52 0x4B    
   \              0x5F 0x55    
   \              0x4E 0x41    
   \              0x56 0x41    
   \              0x49 0x4C    
   \              0x41 0x42    
   \              0x4C 0x45    
   \              0x0A 0x00    
   \   00000032   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x44 0x65          DC8 "Device State is DEVICE_STATE_JOINING\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x5F 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \              0x5F 0x4A    
   \              0x4F 0x49    
   \              0x4E 0x49    
   \              0x4E 0x47    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_27:
   \   00000000   0x44 0x65          DC8 "Device State is DEVICE_STATE_CLEAR\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x5F 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \              0x5F 0x43    
   \              0x4C 0x45    
   \              0x41 0x52    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_28:
   \   00000000   0x44 0x65          DC8 "Device State is DEVICE_STATE_JOINED\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x5F 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \              0x5F 0x4A    
   \              0x4F 0x49    
   \              0x4E 0x45    
   \              0x44 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_29:
   \   00000000   0x44 0x65          DC8 44H, 65H, 76H, 69H, 63H, 65H, 20H, 53H
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \   00000008   0x74 0x61          DC8 74H, 61H, 74H, 65H, 20H, 69H, 73H, 20H
   \              0x74 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \   00000010   0x20 0x20          DC8 20H, 20H, 20H, 20H, 20H, 20H, 63H, 61H
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x63 0x61    
   \   00000018   0x73 0x65          DC8 73H, 65H, 20H, 44H, 45H, 56H, 49H, 43H
   \              0x20 0x44    
   \              0x45 0x56    
   \              0x49 0x43    
   \   00000020   0x45 0x5F          DC8 45H, 5FH, 53H, 54H, 41H, 54H, 45H, 5FH
   \              0x53 0x54    
   \              0x41 0x54    
   \              0x45 0x5F    
   \   00000028   0x4A 0x4F          DC8 4AH, 4FH, 49H, 4EH, 45H, 44H, 20H, 7CH
   \              0x49 0x4E    
   \              0x45 0x44    
   \              0x20 0x7C    
   \   00000030   0x20 0x44          DC8 20H, 44H, 45H, 56H, 49H, 43H, 45H, 5FH
   \              0x45 0x56    
   \              0x49 0x43    
   \              0x45 0x5F    
   \   00000038   0x53 0x54          DC8 53H, 54H, 41H, 54H, 45H, 5FH, 49H, 44H
   \              0x41 0x54    
   \              0x45 0x5F    
   \              0x49 0x44    
   \   00000040   0x45 0x4E          DC8 45H, 4EH, 54H, 49H, 46H, 59H, 49H, 4EH
   \              0x54 0x49    
   \              0x46 0x59    
   \              0x49 0x4E    
   \   00000048   0x47 0x20          DC8 47H, 20H, 7CH, 20H, 44H, 45H, 56H, 49H
   \              0x7C 0x20    
   \              0x44 0x45    
   \              0x56 0x49    
   \   00000050   0x43 0x45          DC8 43H, 45H, 5FH, 53H, 54H, 41H, 54H, 45H
   \              0x5F 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \   00000058   0x5F 0x50          DC8 5FH, 50H, 45H, 52H, 4DH, 49H, 54H, 5FH
   \              0x45 0x52    
   \              0x4D 0x49    
   \              0x54 0x5F    
   \   00000060   0x4A 0x4F          DC8 4AH, 4FH, 49H, 4EH, 49H, 4EH, 47H, 3AH
   \              0x49 0x4E    
   \              0x49 0x4E    
   \              0x47 0x3A    
   \   00000068   0x0A 0x00          DC8 0AH, 0
   \   0000006A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_30:
   \   00000000   0x44 0x65          DC8 44H, 65H, 76H, 69H, 63H, 65H, 20H, 53H
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x53    
   \   00000008   0x74 0x61          DC8 74H, 61H, 74H, 65H, 20H, 69H, 73H, 20H
   \              0x74 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \   00000010   0x20 0x20          DC8 20H, 20H, 20H, 20H, 20H, 20H, 20H, 63H
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x63    
   \   00000018   0x61 0x73          DC8 61H, 73H, 65H, 20H, 44H, 45H, 56H, 49H
   \              0x65 0x20    
   \              0x44 0x45    
   \              0x56 0x49    
   \   00000020   0x43 0x45          DC8 43H, 45H, 5FH, 53H, 54H, 41H, 54H, 45H
   \              0x5F 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \   00000028   0x5F 0x4A          DC8 5FH, 4AH, 4FH, 49H, 4EH, 45H, 44H, 20H
   \              0x4F 0x49    
   \              0x4E 0x45    
   \              0x44 0x20    
   \   00000030   0x7C 0x20          DC8 7CH, 20H, 44H, 45H, 56H, 49H, 43H, 45H
   \              0x44 0x45    
   \              0x56 0x49    
   \              0x43 0x45    
   \   00000038   0x5F 0x53          DC8 5FH, 53H, 54H, 41H, 54H, 45H, 5FH, 50H
   \              0x54 0x41    
   \              0x54 0x45    
   \              0x5F 0x50    
   \   00000040   0x45 0x52          DC8 45H, 52H, 4DH, 49H, 54H, 5FH, 4AH, 4FH
   \              0x4D 0x49    
   \              0x54 0x5F    
   \              0x4A 0x4F    
   \   00000048   0x49 0x4E          DC8 49H, 4EH, 49H, 4EH, 47H, 3AH, 0AH, 0
   \              0x49 0x4E    
   \              0x47 0x3A    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_31:
   \   00000000   0x75 0x70          DC8 "update status led (default): (%x)\015\012"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x28 0x64    
   \              0x65 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x29 0x3A    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_32:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 41H, 75H, 72H
   \              0x67 0x69    
   \              0x6E 0x41    
   \              0x75 0x72    
   \   00000018   0x6F 0x72          DC8 6FH, 72H, 61H, 42H, 75H, 74H, 74H, 6FH
   \              0x61 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \   00000020   0x6E 0x4A          DC8 6EH, 4AH, 6FH, 69H, 6EH, 69H, 6EH, 67H
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \   00000028   0x55 0x70          DC8 55H, 70H, 64H, 61H, 74H, 65H, 44H, 65H
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x44 0x65    
   \   00000030   0x76 0x69          DC8 76H, 69H, 63H, 65H, 53H, 74H, 61H, 74H
   \              0x63 0x65    
   \              0x53 0x74    
   \              0x61 0x74    
   \   00000038   0x65 0x46          DC8 65H, 46H, 6CH, 61H, 67H, 73H, 20H, 6CH
   \              0x6C 0x61    
   \              0x67 0x73    
   \              0x20 0x6C    
   \   00000040   0x69 0x6E          DC8 69H, 6EH, 65H, 20H, 37H, 35H, 36H, 20H
   \              0x65 0x20    
   \              0x37 0x35    
   \              0x36 0x20    
   \   00000048   0x61 0x75          DC8 61H, 75H, 72H, 6FH, 72H, 61H, 2DH, 62H
   \              0x72 0x6F    
   \              0x72 0x61    
   \              0x2D 0x62    
   \   00000050   0x75 0x74          DC8 75H, 74H, 74H, 6FH, 6EH, 2DH, 6AH, 6FH
   \              0x74 0x6F    
   \              0x6E 0x2D    
   \              0x6A 0x6F    
   \   00000058   0x69 0x6E          DC8 69H, 6EH, 69H, 6EH, 67H, 0AH, 0
   \              0x69 0x6E    
   \              0x67 0x0A    
   \              0x00         
   \   0000005F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_33:
   \   00000000   0x40 0x6C          DC8 "@line 769 deviceStateFlags are: (%x)\015\012"
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x37 0x36    
   \              0x39 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x46    
   \              0x6C 0x61    
   \              0x67 0x73    
   \              0x20 0x61    
   \              0x72 0x65    
   \              0x3A 0x20    
   \              0x28 0x25    
   \              0x78 0x29    
   \              0x0D 0x0A    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_34:
   \   00000000   0x6E 0x65          DC8 "new state: (%x) set is: (%x)\015\012"
   \              0x77 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x20    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x69 0x73    
   \              0x3A 0x20    
   \              0x28 0x25    
   \              0x78 0x29    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_35:
   \   00000000   0x69 0x6E          DC8 "in deviceStateFlags |= newState;"
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x73 0x20    
   \              0x7C 0x3D    
   \              0x20 0x6E    
   \              0x65 0x77    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x3B    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_36:
   \   00000000   0x69 0x6E          DC8 "in deviceStateFlags &= ~(newState);"
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x73 0x20    
   \              0x26 0x3D    
   \              0x20 0x7E    
   \              0x28 0x6E    
   \              0x65 0x77    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x29    
   \              0x3B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_37:
   \   00000000   0x40 0x6C          DC8 "@line 779 deviceStateFlags are: (%x)\015\012"
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x37 0x37    
   \              0x39 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x46    
   \              0x6C 0x61    
   \              0x67 0x73    
   \              0x20 0x61    
   \              0x72 0x65    
   \              0x3A 0x20    
   \              0x28 0x25    
   \              0x78 0x29    
   \              0x0D 0x0A    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x4C 0x52          DC8 "LRS"
   \              0x53 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x4C 0x52          DC8 "LR"
   \              0x00         
   \   00000003   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   checkIfPaired
         8   -> emberAfPluginAuroraButtonJoiningReset
         8   -> emberAfPrint
         8   -> emberNetworkState
       0   cliJoin
         0   -> emberAfPluginAuroraButtonJoiningReset
       8   emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler
         8   -> buttonGetState
         8   -> halCommonGetInt32uMillisecondTick
       8   emberAfPluginAuroraButtonJoiningButtonDownEventHandler
         8   -> emEventControlSetDelayMS
       8   emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler
         8   -> __aeabi_memclr4
         8   -> emberAfPluginAuroraButtonJoiningCheckButtonSequence
       8   emberAfPluginAuroraButtonJoiningButtonPress
         8   -> emEventControlSetActive
       8   emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler
         8   -> buttonGetState
         8   -> emEventControlSetDelayMS
         8   -> emberAfPrint
         8   -> halCommonGetInt32uMillisecondTick
       8   emberAfPluginAuroraButtonJoiningButtonUpEventHandler
         8   -> emEventControlSetDelayMS
      24   emberAfPluginAuroraButtonJoiningCheckButtonSequence
         0   -> emberAfPrint
        24   -> emberAfPrint
       0   emberAfPluginAuroraButtonJoiningClearJoiningFlag
       8   emberAfPluginAuroraButtonJoiningFlashLed
         0   -> emberAfPluginAuroraButtonJoiningLedEventEventHandler
         8   -> emberAfPrint
       8   emberAfPluginAuroraButtonJoiningInitialiseLeds
         0   -> emberAfPluginAuroraButtonJoiningLedEventEventHandler
         8   -> emberAfPrintln
      24   emberAfPluginAuroraButtonJoiningLedEventEventHandler
        24   -> emEventControlSetDelayMS
        24   -> halClearLed
        24   -> halSetLed
       8   emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler
         8   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         0   -> emberAfPrint
       8   emberAfPluginAuroraButtonJoiningReset
         8   -> emberAfNetworkState
         8   -> emberAfPrint
         0   -> emberAfPrintln
         8   -> emberAfPrintln
         8   -> emberLeaveNetwork
      16   emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         0   -> emberAfPrintln
        16   -> emberAfPrintln
       8   emberAfPluginAuroraButtonJoiningUpdateStatusLed
         8   -> emberAfPluginAuroraButtonJoiningFlashLed
         8   -> emberAfPrintln
       0   emberAfPluginEndDeviceSupportPollCompletedCallback
       0   sendMatchDescriptor
         0   -> emAfSendMatchDescriptor
      56   setRadioPowerAndMode
        56   -> __aeabi_memclr4
        56   -> emRadioSetEdCcaThreshold
        56   -> emberAfPrint
        56   -> emberGetRadioPower
        56   -> emberGetTxPowerMode
        56   -> emberSetRadioPower
        56   -> emberSetTxPowerMode
        56   -> halCommonMemCompare
        56   -> halInternalGetTokenData
       8   stackStatusEventHandler
         8   -> emAfPermitJoin
         8   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         0   -> emberAfPrint
         8   -> emberAfPrint


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable51
       4  ??DataTable51_1
       4  ??DataTable51_10
       4  ??DataTable51_11
       4  ??DataTable51_12
       4  ??DataTable51_13
       4  ??DataTable51_14
       4  ??DataTable51_2
       4  ??DataTable51_3
       4  ??DataTable51_4
       4  ??DataTable51_5
       4  ??DataTable51_6
       4  ??DataTable51_7
       4  ??DataTable51_8
       4  ??DataTable51_9
       6  ?Subroutine0
       6  ?Subroutine1
       6  ?Subroutine2
       6  ?Subroutine3
       8  ?Subroutine4
       6  ?Subroutine5
      10  ?Subroutine6
      24  ?_0
      12  ?_1
      28  ?_10
     104  ?_11
      16  ?_12
      84  ?_13
      32  ?_14
      64  ?_15
      64  ?_16
      20  ?_17
       4  ?_18
       4  ?_19
      12  ?_2
      36  ?_20
      40  ?_21
      44  ?_22
      48  ?_23
      28  ?_24
      52  ?_25
      40  ?_26
      36  ?_27
      40  ?_28
     108  ?_29
      24  ?_3
      80  ?_30
      36  ?_31
      96  ?_32
      40  ?_33
      32  ?_34
      36  ?_35
      36  ?_36
      40  ?_37
      32  ?_4
      80  ?_5
      24  ?_6
      32  ?_7
      16  ?_8
      16  ?_9
      52  buttonDownCount
          buttonDownDetectStarted
          buttonUpDetectStarted
          buttonSequenceStarted
          emberAfPluginAuroraButtonJoiningButtonDownEventControl
          emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl
          emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl
          emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl
          buttonDownTimes
          buttonDownTime
      32  buttonSequence
      44  checkIfPaired
       2  cliJoin
      12  currentNetworkState
          ledsCurrentStates
          emberAfPluginAuroraButtonJoiningLedEventEventControl
       3  deviceStateFlags
          checkedIfPaired
          lastDeviceStateFlags
     100  deviceStateText
      30  emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler
      36  emberAfPluginAuroraButtonJoiningButtonDownEventHandler
      30  emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler
      18  emberAfPluginAuroraButtonJoiningButtonPress
      68  emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler
       8  emberAfPluginAuroraButtonJoiningButtonUpEventControl
      32  emberAfPluginAuroraButtonJoiningButtonUpEventHandler
     168  emberAfPluginAuroraButtonJoiningCheckButtonSequence
       8  emberAfPluginAuroraButtonJoiningClearJoiningFlag
      30  emberAfPluginAuroraButtonJoiningFlashLed
      22  emberAfPluginAuroraButtonJoiningInitialiseLeds
     118  emberAfPluginAuroraButtonJoiningLedEventEventHandler
       8  emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl
      24  emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler
     112  emberAfPluginAuroraButtonJoiningReset
      82  emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
     150  emberAfPluginAuroraButtonJoiningUpdateStatusLed
       2  emberAfPluginEndDeviceSupportPollCompletedCallback
      16  events
      12  joiningFLag
          stackStatusEventControl
      32  ledSettings
       1  nwkNewJoinPending
       8  routeRequestTimerEventControl
      14  sendMatchDescriptor
     236  setRadioPowerAndMode
      48  stackStatusEventHandler

 
   101 bytes in section .bss
   135 bytes in section .data
    44 bytes in section .rodata
 2 946 bytes in section .text
 
 2 946 bytes of CODE  memory
    44 bytes of CONST memory
   236 bytes of DATA  memory

Errors: none
Warnings: 5
