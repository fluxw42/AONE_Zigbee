###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        08/Dec/2016  20:07:47
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-host-protocol\aurora-host-protocol.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-host-protocol\aurora-host-protocol.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D
#        "BOARD_HEADER=\"../../../AONE_Zigbee/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"aurora-host-protocol.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-host-protocol\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-host-protocol.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-host-protocol.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-host-protocol\aurora-host-protocol.c
      1          #include <string.h>
      2          #include "aurora-host-protocol.h" 
      3          #include "../aurora-level-control/aurora-level-control-hal.h" 
      4          
      5          static void auroraSendCommand(int8u* command);
      6          
      7          static void auroraSendCommand(int8u* command)
      8          {   
      9              int8u mode = getAuroraDimmerMode();    
     10              
     11              if ((mode != AURORA_MODE_RGBW) &&
     12                  (mode != AURORA_MODE_CX) &&
     13                  (mode != AURORA_MODE_DIM))
     14              {
     15                  return;  // Invalid device mode for sending a host serial msg.      
     16              }
     17               
     18              command[0] = AURORA_HOST_START_CODE;  
     19              
     20              command[1] = mode;
     21              
     22              for (int8u i=0; i<8; i++) 
     23              {
     24                  command[8] ^= command[i];        
     25              }
     26              
     27              command[9] = AURORA_HOST_END_CODE;
     28          
     29              debugBuffer(command, 10);    
     30              
     31              for (int8u i=0; i<AURORA_HOST_SEND_TIMES; i++) 
     32              {
     33                    emberAfDebugPrint("command: %d: \n", command);
     34          
     35                  emberSerialWriteData(HOST_SERIAL_PORT, command, 10); 
     36              }
     37          }
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void emberAfPluginAuroraHostProtocolSetRgbColor(t_RGB* RGB)
     40          {
   \                     emberAfPluginAuroraHostProtocolSetRgbColor: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
   \   00000002   0x4605             MOV      R5,R0
     41              int8u command[10];
     42              
     43              memset(command, 0, 10);
   \   00000004   0x.... 0x....      BL       ?Subroutine1
     44              
     45              command[2] = RGB->R;
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000008   0xAC00             ADD      R4,SP,#+0
   \   0000000A   0x7828             LDRB     R0,[R5, #+0]
   \   0000000C   0x70A0             STRB     R0,[R4, #+2]
     46              command[3] = RGB->G;
   \   0000000E   0x7868             LDRB     R0,[R5, #+1]
   \   00000010   0x70E0             STRB     R0,[R4, #+3]
     47              command[4] = RGB->B;
   \   00000012   0x78A8             LDRB     R0,[R5, #+2]
   \   00000014   0xF88D 0x0004      STRB     R0,[SP, #+4]
     48              command[5] = RGB->W;
   \   00000018   0x78E8             LDRB     R0,[R5, #+3]
   \   0000001A   0xF88D 0x0005      STRB     R0,[SP, #+5]
     49                  
     50              auroraSendCommand(command);
   \   0000001E   0x.... 0x....      BL       getAuroraDimmerMode
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xBF1C             ITT      NE 
   \   00000026   0x2801             CMPNE    R0,#+1
   \   00000028   0x2802             CMPNE    R0,#+2
   \   0000002A   0xD113             BNE.N    ??CrossCallReturnLabel_6
   \   0000002C   0x7060             STRB     R0,[R4, #+1]
   \   0000002E   0x21AA             MOVS     R1,#+170
   \   00000030   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \   00000034   0x2000             MOVS     R0,#+0
   \                     ??emberAfPluginAuroraHostProtocolSetRgbColor_0: (+1)
   \   00000036   0x7A21             LDRB     R1,[R4, #+8]
   \   00000038   0x5D02             LDRB     R2,[R0, R4]
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \   0000003C   0x4051             EORS     R1,R2,R1
   \   0000003E   0x2808             CMP      R0,#+8
   \   00000040   0x7221             STRB     R1,[R4, #+8]
   \   00000042   0xDBF8             BLT.N    ??emberAfPluginAuroraHostProtocolSetRgbColor_0
   \   00000044   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000048   0x.... 0x....      BL       debugBuffer
   \   0000004C   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000050   0x.... 0x....      BL       ?Subroutine3
     51          }
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000054   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
     52          
     53          /** @brief Printf buffer
     54           * Prints the give number of bytes for debug
     55           */

   \                                 In section .text, align 2, keep-with-next
     56          void debugBuffer(int8u* buffer, int8u count)
     57          {
   \                     debugBuffer: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     58              int8u index;
     59           
     60              emberAfDebugPrint("Buffer: %d: ", count);
   \   00000006   0x462A             MOV      R2,R5
   \   00000008   0x.... 0x....      ADR.W    R1,?_1
   \   0000000C   0x2002             MOVS     R0,#+2
   \   0000000E   0x.... 0x....      BL       emberAfPrint
     61              for (index = 0; index < count; index++) 
   \   00000012   0x2600             MOVS     R6,#+0
   \   00000014   0x....             ADR.N    R7,??DataTable4  ;; " %x"
   \   00000016   0xE005             B.N      ??debugBuffer_0
     62              {
     63                  emberAfDebugPrint(" %x", buffer[index]);
   \                     ??debugBuffer_1: (+1)
   \   00000018   0x5D32             LDRB     R2,[R6, R4]
   \   0000001A   0x4639             MOV      R1,R7
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x.... 0x....      BL       emberAfPrint
     64              }
   \   00000022   0x1C76             ADDS     R6,R6,#+1
   \                     ??debugBuffer_0: (+1)
   \   00000024   0xB2F6             UXTB     R6,R6
   \   00000026   0x42AE             CMP      R6,R5
   \   00000028   0xD3F6             BCC.N    ??debugBuffer_1
     65              emberAfDebugPrint("\r\n");
   \   0000002A   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000002E   0x....             ADR.N    R1,??DataTable4_1  ;; 0x0D, 0x0A, 0x00, 0x00
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x.... 0x....      B.W      emberAfPrint
     66          }
     67          
     68          
     69          //MN function to send a double flash to motherboard

   \                                 In section .text, align 2, keep-with-next
     70          void emberAfPluginAuroraHostProtocolFlashTwice(void)
     71          {
   \                     emberAfPluginAuroraHostProtocolFlashTwice: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     72              int8u command[10];
     73              
     74              memset(command, 0, 10);    
   \   00000002   0x.... 0x....      BL       ?Subroutine1
     75           
     76              command[0] = AURORA_HOST_START_CODE;  
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000006   0x20AA             MOVS     R0,#+170
   \   00000008   0xF88D 0x0000      STRB     R0,[SP, #+0]
     77              
     78              command[1] = 0x05;
   \   0000000C   0x2105             MOVS     R1,#+5
   \   0000000E   0x....             B.N      ?Subroutine0
     79              
     80              for (int8u i=0; i<8; i++) 
     81              {
     82                  command[8] ^= command[i];        
     83              }
     84              
     85              command[9] = AURORA_HOST_END_CODE;
     86          
     87              debugBuffer(command, 10);    
     88              
     89              for (int8u i=0; i<AURORA_HOST_SEND_TIMES; i++) 
     90              {
     91                    emberAfDebugPrint("command: %d: \n", command);
     92          
     93                  emberSerialWriteData(HOST_SERIAL_PORT, command, 10); 
     94              }
     95          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xA800             ADD      R0,SP,#+0
   \   00000002   0x7041             STRB     R1,[R0, #+1]
   \   00000004   0x2100             MOVS     R1,#+0
   \                     ??Subroutine0_0: (+1)
   \   00000006   0x7A02             LDRB     R2,[R0, #+8]
   \   00000008   0x5C0B             LDRB     R3,[R1, R0]
   \   0000000A   0x1C49             ADDS     R1,R1,#+1
   \   0000000C   0x405A             EORS     R2,R3,R2
   \   0000000E   0x2908             CMP      R1,#+8
   \   00000010   0x7202             STRB     R2,[R0, #+8]
   \   00000012   0xDBF8             BLT.N    ??Subroutine0_0
   \   00000014   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000018   0x.... 0x....      BL       debugBuffer
   \   0000001C   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000020   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000024   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x2055             MOVS     R0,#+85
   \   00000002   0xF88D 0x0009      STRB     R0,[SP, #+9]
   \   00000006   0x210A             MOVS     R1,#+10
   \   00000008   0xA800             ADD      R0,SP,#+0
   \   0000000A   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x220A             MOVS     R2,#+10
   \   00000002   0xA900             ADD      R1,SP,#+0
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      B.W      emberSerialWriteData

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0xAA00             ADD      R2,SP,#+0
   \   00000002   0x.... 0x....      ADR.W    R1,?_0
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      B.W      emberAfPrint
     96          
     97          //MN function to send a single flash to motherboard

   \                                 In section .text, align 2, keep-with-next
     98          void emberAfPluginAuroraHostProtocolFlashOnce(void)
     99          {
   \                     emberAfPluginAuroraHostProtocolFlashOnce: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    100              int8u command[10];
    101              
    102              memset(command, 0, 10);    
   \   00000002   0x.... 0x....      BL       ?Subroutine1
    103           
    104              command[0] = AURORA_HOST_START_CODE;  
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000006   0x20AA             MOVS     R0,#+170
   \   00000008   0xF88D 0x0000      STRB     R0,[SP, #+0]
    105              
    106              command[1] = 0x06;
   \   0000000C   0x2106             MOVS     R1,#+6
   \   0000000E                      REQUIRE ?Subroutine0
   \   0000000E                      ;; // Fall through to label ?Subroutine0
    107              
    108              for (int8u i=0; i<8; i++) 
    109              {
    110                  command[8] ^= command[i];        
    111              }
    112              
    113              command[9] = AURORA_HOST_END_CODE;
    114          
    115              debugBuffer(command, 10);    
    116              
    117              for (int8u i=0; i<AURORA_HOST_SEND_TIMES; i++) 
    118              {
    119                    emberAfDebugPrint("command: %d: \n", command);
    120          
    121                  emberSerialWriteData(HOST_SERIAL_PORT, command, 10); 
    122              }
    123          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x20 0x25          DC8      " %x"
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x210A             MOVS     R1,#+10
   \   00000002   0xA800             ADD      R0,SP,#+0
   \   00000004   0x.... 0x....      B.W      __aeabi_memclr4

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x25          DC8 " %x"
   \              0x78 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x63 0x6F          DC8 "command: %d: \012"
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x64 0x3A    
   \              0x20 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x42 0x75          DC8 "Buffer: %d: "
   \              0x66 0x66    
   \              0x65 0x72    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x3A 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   debugBuffer
         0   -> emberAfPrint
        24   -> emberAfPrint
      16   emberAfPluginAuroraHostProtocolFlashOnce
        16   -> __aeabi_memclr4
        16   -> debugBuffer
        16   -> emberAfPrint
        16   -> emberSerialWriteData
      16   emberAfPluginAuroraHostProtocolFlashTwice
        16   -> __aeabi_memclr4
        16   -> debugBuffer
        16   -> emberAfPrint
        16   -> emberSerialWriteData
      24   emberAfPluginAuroraHostProtocolSetRgbColor
        24   -> __aeabi_memclr4
        24   -> debugBuffer
        24   -> emberAfPrint
        24   -> emberSerialWriteData
        24   -> getAuroraDimmerMode


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
      38  ?Subroutine0
       8  ?Subroutine1
      12  ?Subroutine2
      10  ?Subroutine3
      12  ?Subroutine4
      16  ?_0
      16  ?_1
       4  ?_2
       4  ?_3
      54  debugBuffer
      14  emberAfPluginAuroraHostProtocolFlashOnce
      16  emberAfPluginAuroraHostProtocolFlashTwice
      86  emberAfPluginAuroraHostProtocolSetRgbColor

 
   8 bytes in section .rodata
 290 bytes in section .text
 
 290 bytes of CODE  memory
   8 bytes of CONST memory

Errors: none
Warnings: none
