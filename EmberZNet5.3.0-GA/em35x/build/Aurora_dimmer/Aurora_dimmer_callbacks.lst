###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        01/Dec/2016  11:42:13
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\Aurora_dimmer_callbacks.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\Aurora_dimmer_callbacks.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D
#        "BOARD_HEADER=\"../../../AONE_Zigbee/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"Aurora_dimmer_callbacks.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\Aurora_dimmer_callbacks.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\Aurora_dimmer_callbacks.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\AONE_Zigbee\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\Aurora_dimmer_callbacks.c
      1          //
      2          
      3          // This callback file is created for your convenience. You may add application
      4          // code to this file. If you regenerate this file over a previous version, the
      5          // previous version will be overwritten and any code you have added will be
      6          // lost.
      7          
      8          #include <string.h>
      9          #include "app/framework/include/af.h"
     10          #include "app/framework/plugin/aurora-button-joining/aurora-button-joining.h"
     11          #include "app/framework/plugin/aurora-button-joining/aurora-button-joining-hal.h"
     12          #include "app/framework/plugin/aurora-pwm/aurora-pwm.h"
     13          #include "app/framework/plugin/aurora-pwm/aurora-pwm-hal.h"
     14          #include "app/framework/plugin/aurora-colour-control/aurora-colour-control.h"
     15          #include "app/framework/plugin/aurora-level-control/aurora-level-control-hal.h"
     16          #include "app/framework/plugin/aurora-host-protocol/aurora-host-plc-protocol.h"
     17          #include "app/framework/plugin/aurora-host-protocol/aurora-host-protocol.h"
     18          #include "app/framework/plugin/aurora-host-protocol/aurora-host-hal.h"
     19          #include "app/framework/plugin/aurora-colour-control/aurora-colour-conversion.h"
     20          #include "app/framework/plugin/tunneling-server/tunneling-server.h"
     21          
     22          
     23          typedef struct {
     24              boolean open;
     25              int16u tunnelId;
     26              int8u protocolId;
     27              int16u manufacturerCode;
     28              boolean flowControlSupport;
     29              int16u maximumIncomingTransferSize;
     30          } tTunnelStatus;
     31          

   \                                 In section .bss, align 4
     32          tTunnelStatus tunnelStatus = {0};
   \                     tunnelStatus:
   \   00000000                      DS8 12
     33          
     34          /** @brief Move To Color - ZCL cmd callback
     35           *
     36           * @param colorX   Ver.: always
     37           * @param colorY   Ver.: always
     38           * @param transitionTime   Ver.: always
     39           */

   \                                 In section .text, align 2, keep-with-next
     40          boolean emberAfColorControlClusterMoveToColorCallback(int16u colorX,
     41                                                                int16u colorY,
     42                                                                int16u transitionTime)
     43          {
   \                     emberAfColorControlClusterMoveToColorCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     44              EmberAfStatus status = emberAfPluginAuroraColourControlMoveToColor(colorX, colorY, transitionTime);    
   \   00000002   0x.... 0x....      BL       emberAfPluginAuroraColourControlMoveToColor
     45              emberAfSendImmediateDefaultResponse(status);  // Send ZCl cmd default response.      
   \   00000006   0x....             B.N      ?Subroutine0
     46              return TRUE;
     47          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x.... 0x....      BL       emberAfSendImmediateDefaultResponse
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
     48          
     49          /** @brief Move Color - ZCL cmd callback
     50           *
     51           * @param rateX   Ver.: always
     52           * @param rateY   Ver.: always
     53           */

   \                                 In section .text, align 2, keep-with-next
     54          boolean emberAfColorControlClusterMoveColorCallback(int16s rateX,
     55                                                              int16s rateY)
     56          {
   \                     emberAfColorControlClusterMoveColorCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     57              EmberAfStatus status = emberAfPluginAuroraColourControlMoveColor(rateX, rateY);
   \   00000002   0x.... 0x....      BL       emberAfPluginAuroraColourControlMoveColor
     58              emberAfSendImmediateDefaultResponse(status);  // Send ZCl cmd default response.      
   \   00000006                      REQUIRE ?Subroutine0
   \   00000006                      ;; // Fall through to label ?Subroutine0
     59              return TRUE;
     60          }
     61          
     62          /** @brief Step Color - ZCL cmd callback
     63           *
     64           * @param stepX   Ver.: always
     65           * @param stepY   Ver.: always
     66           * @param transitionTime   Ver.: always
     67           */

   \                                 In section .text, align 2, keep-with-next
     68          boolean emberAfColorControlClusterStepColorCallback(int16s stepX,
     69                                                              int16s stepY,
     70                                                              int16u transitionTime)
     71          {
   \                     emberAfColorControlClusterStepColorCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     72              EmberAfStatus status = emberAfPluginAuroraColourControlStepColor(stepX, stepY, transitionTime);
   \   00000002   0x.... 0x....      BL       emberAfPluginAuroraColourControlStepColor
     73              emberAfSendImmediateDefaultResponse(status);  // Send ZCl cmd default response.      
   \   00000006   0x....             B.N      ?Subroutine0
     74              return TRUE;
     75          }
     76          
     77          /** @brief Move To Color Temperature
     78           *
     79           * 
     80           *
     81           * @param colorTemperature   Ver.: always
     82           * @param transitionTime   Ver.: always
     83           */

   \                                 In section .text, align 2, keep-with-next
     84          boolean emberAfColorControlClusterMoveToColorTemperatureCallback(int16u colorTemperature,
     85                                                                           int16u transitionTime)
     86          {
   \                     emberAfColorControlClusterMoveToColorTemperatureCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     87              EmberAfStatus status =  emberAfPluginAuroraColourControlMoveToColorTemperature(colorTemperature, transitionTime);
   \   00000002   0x.... 0x....      BL       emberAfPluginAuroraColourControlMoveToColorTemperature
     88              emberAfSendImmediateDefaultResponse(status);  // Send ZCl cmd default response.      
   \   00000006   0x....             B.N      ?Subroutine0
     89              return TRUE;
     90          }
     91          
     92          /** @brief Match Protocol Address
     93           *
     94           * @param protocolAddress   Ver.: always
     95           */

   \                                 In section .text, align 2, keep-with-next
     96          boolean emberAfGenericTunnelClusterMatchProtocolAddressCallback(int8u* protocolAddress)
     97          {
     98            return FALSE;
   \                     emberAfGenericTunnelClusterMatchProtocolAddressCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     99          }
    100          
    101          /** @brief Image Block Response
    102           *
    103           * 
    104           *
    105           * @param status   Ver.: always
    106           * @param manufacturerId   Ver.: always
    107           * @param imageType   Ver.: always
    108           * @param fileVersion   Ver.: always
    109           * @param fileOffset   Ver.: always
    110           * @param dataSize   Ver.: always
    111           * @param imageData   Ver.: always
    112           */

   \                                 In section .text, align 2, keep-with-next
    113          boolean emberAfOtaBootloadClusterImageBlockResponseCallback(int8u status,
    114                                                                      int16u manufacturerId,
    115                                                                      int16u imageType,
    116                                                                      int32u fileVersion,
    117                                                                      int32u fileOffset,
    118                                                                      int8u dataSize,
    119                                                                      int8u* imageData)
    120          {
    121            return FALSE;
   \                     emberAfOtaBootloadClusterImageBlockResponseCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    122          }
    123          
    124          /** @brief Upgrade End Response
    125           *
    126           * 
    127           *
    128           * @param manufacturerId   Ver.: always
    129           * @param imageType   Ver.: always
    130           * @param fileVersion   Ver.: always
    131           * @param currentTime   Ver.: always
    132           * @param upgradeTime   Ver.: always
    133           */

   \                                 In section .text, align 2, keep-with-next
    134          boolean emberAfOtaBootloadClusterUpgradeEndResponseCallback(int16u manufacturerId,
    135                                                                      int16u imageType,
    136                                                                      int32u fileVersion,
    137                                                                      int32u currentTime,
    138                                                                      int32u upgradeTime)
    139          {
    140            return FALSE;
   \                     emberAfOtaBootloadClusterUpgradeEndResponseCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    141          }
    142          
    143          /** @brief Query Next Image Response
    144           *
    145           * 
    146           *
    147           * @param status   Ver.: always
    148           * @param manufacturerId   Ver.: always
    149           * @param imageType   Ver.: always
    150           * @param fileVersion   Ver.: always
    151           * @param imageSize   Ver.: always
    152           */

   \                                 In section .text, align 2, keep-with-next
    153          boolean emberAfOtaBootloadClusterQueryNextImageResponseCallback(int8u status,
    154                                                                          int16u manufacturerId,
    155                                                                          int16u imageType,
    156                                                                          int32u fileVersion,
    157                                                                          int32u imageSize)
    158          {
    159            return FALSE;
   \                     emberAfOtaBootloadClusterQueryNextImageResponseCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    160          }
    161          
    162          /** @brief Main Start
    163           *
    164           * This function is called at the start of main after the HAL has been
    165           * initialized.  The standard main function arguments of argc and argv are
    166           * passed in.  However not all platforms have support for main() function
    167           * arguments.  Those that do not are passed NULL for argv, therefore argv should
    168           * be checked for NULL before using it.  If the callback determines that the
    169           * program must exit, it should return TRUE.  The value returned by main() will
    170           * be the value written to the returnCode pointer.  Otherwise the callback
    171           * should return FALSE to let normal execution continue.
    172           *
    173           * @param returnCode   Ver.: always
    174           * @param argc   Ver.: always
    175           * @param argv   Ver.: always
    176           */

   \                                 In section .text, align 2, keep-with-next
    177          boolean emberAfMainStartCallback(int* returnCode,
    178                                           int argc,
    179                                           char** argv)
    180          {
    181            // NOTE:  argc and argv may not be supported on all platforms, so argv MUST be
    182            // checked for NULL before referencing it.  On those platforms without argc 
    183            // and argv "0" and "NULL" are passed respectively.
    184            
    185            return FALSE;  // exit?
   \                     emberAfMainStartCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    186          }
    187          
    188          /** @brief Main Init
    189           *
    190           * This function is called from the application's main function. It gives the
    191           * application a chance to do any initialization required at system startup. Any
    192           * code that you would normally put into the top of the application's main()
    193           * routine should be put into this function.
    194           */

   \                                 In section .text, align 2, keep-with-next
    195          void emberAfMainInitCallback(void)
    196          {  
   \                     emberAfMainInitCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    197              emberAfDebugPrintln("\r\n*** Aurora Light Dimmmer ***");    
   \   00000002   0x.... 0x....      ADR.W    R1,?_0
   \   00000006   0x.... 0x....      BL       ?Subroutine2
    198              emberAfDebugPrintln("Module fw version: 0x%2X", EMBER_AF_PLUGIN_AURORA_OTA_CLIENT_POLICY_FIRMWARE_VERSION2);    
   \                     ??CrossCallReturnLabel_10: (+1)
   \   0000000A   0x221D             MOVS     R2,#+29
   \   0000000C   0x.... 0x....      ADR.W    R1,?_1
   \   00000010   0x2002             MOVS     R0,#+2
   \   00000012   0x.... 0x....      BL       emberAfPrintln
    199              
    200          #ifdef AONE_HW_USE_JOIN_INPUT_ON_PB6
    201              emberAfDebugPrintln("AONE Hw, using alternate joining pin=PB6");
    202          #endif
    203          
    204              int8u mode = getAuroraDimmerMode();  
   \   00000016   0x.... 0x....      BL       getAuroraDimmerMode
   \   0000001A   0x4604             MOV      R4,R0
    205              emberAfDebugPrint("AURORA_MODE=%d, ", mode);    
   \   0000001C   0x4622             MOV      R2,R4
   \   0000001E   0x.... 0x....      ADR.W    R1,?_2
   \   00000022   0x2002             MOVS     R0,#+2
   \   00000024   0x.... 0x....      BL       emberAfPrint
    206              switch (mode) 
   \   00000028   0xB12C             CBZ.N    R4,??emberAfMainInitCallback_0
   \   0000002A   0x2C02             CMP      R4,#+2
   \   0000002C   0xD008             BEQ.N    ??emberAfMainInitCallback_1
   \   0000002E   0xD305             BCC.N    ??emberAfMainInitCallback_2
   \   00000030   0x2C03             CMP      R4,#+3
   \   00000032   0xD007             BEQ.N    ??emberAfMainInitCallback_3
   \   00000034   0xE008             B.N      ??emberAfMainInitCallback_4
    207              {
    208                  case AURORA_MODE_RGBW:
    209                  {
    210                      emberAfDebugPrintln("RGBW");
   \                     ??emberAfMainInitCallback_0: (+1)
   \   00000036   0x.... 0x....      ADR.W    R1,?_3
   \   0000003A   0xE007             B.N      ??emberAfMainInitCallback_5
    211                      break;        
    212                  }
    213                  case AURORA_MODE_CX:
    214                  {
    215                      emberAfDebugPrintln("CX");
   \                     ??emberAfMainInitCallback_2: (+1)
   \   0000003C   0x....             ADR.N    R1,??DataTable31  ;; 0x43, 0x58, 0x00, 0x00
   \   0000003E   0xE005             B.N      ??emberAfMainInitCallback_5
    216                      break;        
    217                  }
    218                  case AURORA_MODE_DIM:
    219                  {
    220                      emberAfDebugPrintln("DIM");
   \                     ??emberAfMainInitCallback_1: (+1)
   \   00000040   0x....             ADR.N    R1,??DataTable31_1  ;; "DIM"
   \   00000042   0xE003             B.N      ??emberAfMainInitCallback_5
    221                      break;
    222                  }    
    223                  case AURORA_MODE_PLC:
    224                  {
    225                      emberAfDebugPrintln("PLC");
   \                     ??emberAfMainInitCallback_3: (+1)
   \   00000044   0x....             ADR.N    R1,??DataTable31_2  ;; "PLC"
   \   00000046   0xE001             B.N      ??emberAfMainInitCallback_5
    226                      break;
    227                  }
    228                  default:
    229                  {
    230                      emberAfDebugPrintln("Invalid");
   \                     ??emberAfMainInitCallback_4: (+1)
   \   00000048   0x.... 0x....      ADR.W    R1,?_7
   \                     ??emberAfMainInitCallback_5: (+1)
   \   0000004C   0x.... 0x....      BL       ?Subroutine2
    231                      break;
    232                  }
    233              }
    234              
    235              emberAfPluginAuroraButtonJoiningButtonIoInit();
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000050   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningButtonIoInit
    236              
    237              emberAfPluginAuroraButtonJoiningInitialiseLeds();
   \   00000054   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningInitialiseLeds
    238              
    239              emberAfPluginAuroraHostHalSerialInitHostPlc();
   \   00000058   0x.... 0x....      BL       emberAfPluginAuroraHostHalSerialInitHostPlc
    240          
    241          #ifndef AONE_HW_USE_JOIN_INPUT_ON_PB6
    242              emberAfPluginAuroraPwmInitializeTimer();  // Cant use pwm timer as this uses PB6.
   \   0000005C   0x.... 0x....      BL       emberAfPluginAuroraPwmInitializeTimer
    243          #endif
    244              
    245              emberAfPluginAuroraColourControlInitColorSpaceConversion();     
   \   00000060   0xE8BD 0x4010      POP      {R4,LR}
   \   00000064   0x.... 0x....      B.W      emberAfPluginAuroraColourControlInitColorSpaceConversion
    246              
    247              //if the device is not paired to a network, it will enter pairing mode MN
    248              //checkIfPaired();
    249              
    250          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    251          
    252          /** @brief Main Tick
    253           *
    254           * Whenever main application tick is called, this callback will be called at the
    255           * end of the main tick execution.
    256           *
    257           */

   \                                 In section .text, align 2, keep-with-next
    258          void emberAfMainTickCallback(void)
    259          {
   \                     emberAfMainTickCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    260              int8u mode;
    261              
    262          //emberAfDebugPrint("reached emberAfMainTickCallback line 253 Aurora_dimmer_callbacks \n"); //MN
    263          
    264              
    265              emberAfPluginAuroraButtonJoiningUpdateStatusLed();
   \   00000002   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateStatusLed
    266              
    267              //if the device is not paired to a network, it will enter pairing mode MN
    268              checkIfPaired();
   \   00000006   0x.... 0x....      BL       checkIfPaired
    269            
    270              // Read any data from the host
    271              mode = getAuroraDimmerMode();
    272              switch(mode) 
   \   0000000A   0x.... 0x....      BL       getAuroraDimmerMode
   \   0000000E   0x2803             CMP      R0,#+3
   \   00000010   0xBF04             ITT      EQ 
    273              {
    274          
    275                  case AURORA_MODE_PLC:
    276                      emberAfPluginAuroraHostHalPlcCheckHost();
   \   00000012   0xE8BD 0x4001      POPEQ    {R0,LR}
   \   00000016   0x.... 0x....      BEQ.W    emberAfPluginAuroraHostHalPlcCheckHost
    277                      break;
    278                      
    279                  case AURORA_MODE_RGBW:
    280                  case AURORA_MODE_CX:
    281                  case AURORA_MODE_DIM:
    282                  default:
    283                      break;
    284              }
    285          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    286          
    287          /** @brief Stack Status
    288           *
    289           * This function is called by the application framework from the stack status
    290           * handler.  This callbacks provides applications an opportunity to be notified
    291           * of changes to the stack status and take appropriate action.  The return code
    292           * from this callback is ignored by the framework.  The framework will always
    293           * process the stack status after the callback returns.
    294           *
    295           * @param status   Ver.: always
    296           */

   \                                 In section .text, align 2, keep-with-next
    297          boolean emberAfStackStatusCallback(EmberStatus status)
    298          {
   \                     emberAfStackStatusCallback: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
    299            //MN
    300              emberAfDebugPrintln("Reached emberAfStackStatusCallback line 285 Aurora_dimmer_callbacks");
   \   00000004   0x.... 0x....      ADR.W    R1,?_8
   \   00000008   0x....             LDR.N    R5,??DataTable31_3
   \   0000000A   0x.... 0x....      BL       ?Subroutine2
    301            emberAfScanErrorCallback(EMBER_SUCCESS);  //MN  Always ensure form and join scan is stopped.             
   \                     ??CrossCallReturnLabel_8: (+1)
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       emberAfScanErrorCallback
    302          
    303            
    304              switch(status) 
   \   00000014   0x2C90             CMP      R4,#+144
   \   00000016   0xD004             BEQ.N    ??emberAfStackStatusCallback_0
   \   00000018   0x2C91             CMP      R4,#+145
   \   0000001A   0xD021             BEQ.N    ??emberAfStackStatusCallback_1
   \   0000001C   0x2C94             CMP      R4,#+148
   \   0000001E   0xD04F             BEQ.N    ??emberAfStackStatusCallback_2
   \   00000020   0xE054             B.N      ??CrossCallReturnLabel_4
    305              {
    306                  case EMBER_NETWORK_UP:
    307                      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINED, DEVICE_STATE_FLAGS_SET);
   \                     ??emberAfStackStatusCallback_0: (+1)
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x2002             MOVS     R0,#+2
   \   00000026   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    308                      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINING, DEVICE_STATE_FLAGS_CLEAR);
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    309                      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_NETWORK_UNAVAILABLE, DEVICE_STATE_FLAGS_CLEAR); 
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x2010             MOVS     R0,#+16
   \   00000036   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    310                      
    311                        //MN
    312              emberAfDebugPrintln("Reached emberAfStackStatusCallback line 294 Aurora_dimmer_callbacks");
   \   0000003A   0x.... 0x....      ADR.W    R1,?_9
   \   0000003E   0x.... 0x....      BL       ?Subroutine2
    313                      
    314                      
    315                      emberAfOtaClientStartCallback(); 
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000042   0x.... 0x....      BL       emberAfOtaClientStartCallback
    316                      //GB dont need this on linkup!   emberAfPluginAuroraPwmInitializeTimer();
    317                         
    318                      //MN sample code from gary
    319                      emberAfDebugPrintln("Nwk Status=JOINED, NodeId=0x%2x", emberGetNodeId());
   \   00000046   0x.... 0x....      BL       emberGetNodeId
   \   0000004A   0x4602             MOV      R2,R0
   \   0000004C   0x.... 0x....      ADR.W    R1,?_10
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x.... 0x....      BL       emberAfPrintln
    320                      
    321                      emberTick();  // Stack tick here ensures "Device Announce" is always sent on Join.
   \   00000056   0x.... 0x....      BL       emberTick
    322                                  
    323                      nwkNewJoinPending = FALSE;  // Safety reset. 
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x7028             STRB     R0,[R5, #+0]
    324                      
    325                      break;
   \   0000005E   0xE035             B.N      ??CrossCallReturnLabel_4
    326          
    327                  case EMBER_NETWORK_DOWN:
    328                      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_CLEAR_MASK, DEVICE_STATE_FLAGS_CLEAR);
   \                     ??emberAfStackStatusCallback_1: (+1)
   \   00000060   0x.... 0x....      BL       ?Subroutine3
    329                      
    330                        //MN
    331              emberAfDebugPrintln("Reached emberAfStackStatusCallback line 310 Aurora_dimmer_callbacks");
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000064   0x.... 0x....      ADR.W    R1,?_11
   \   00000068   0x.... 0x....      BL       ?Subroutine2
    332          
    333                      //MN sample code from gary   
    334                          if (emberNetworkState() != EMBER_JOINED_NETWORK_NO_PARENT)
   \                     ??CrossCallReturnLabel_6: (+1)
   \   0000006C   0x.... 0x....      BL       emberNetworkState
   \   00000070   0x2803             CMP      R0,#+3
   \   00000072   0xD02B             BEQ.N    ??CrossCallReturnLabel_4
    335                      {
    336                          emberAfDebugPrintln("Nwk Status=LEFT_PAN");
   \   00000074   0x.... 0x....      ADR.W    R1,?_12
   \   00000078   0x.... 0x....      BL       ?Subroutine2
    337                          
    338                          emberTick();  // Stack tick here ensures "Leave Announce" is always sent.
   \                     ??CrossCallReturnLabel_5: (+1)
   \   0000007C   0x.... 0x....      BL       emberTick
    339                          
    340                          if (nwkNewJoinPending)    // CHECK GLOBAL VARIABLE
   \   00000080   0x7828             LDRB     R0,[R5, #+0]
   \   00000082   0xB318             CBZ.N    R0,??CrossCallReturnLabel_4
    341                          {
    342                              // We have LEFT the existing nwk, start Joining again.
    343                              nwkNewJoinPending = FALSE;     // CLEAR GLOBAL VARIABLE        
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x7028             STRB     R0,[R5, #+0]
    344          					
    345                            //  emberAfPluginAuroraButtonJoiningJoinNetwork();  // NOW START THE JOINING SCAN
    346                              
    347                              
    348                                  emberAfDebugPrint("Reached emberAfPluginAuroraButtonJoiningJoinNetwork line 319 aurora-button-joining\n");//MN
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x.... 0x....      ADR.W    R1,?_13
   \   0000008E   0x.... 0x....      BL       emberAfPrint
    349            
    350                                  emberAfDebugPrint("Find joinable networks (%x)\r\n", emberNetworkState());//MN
   \   00000092   0x.... 0x....      BL       emberNetworkState
   \   00000096   0x4602             MOV      R2,R0
   \   00000098   0x.... 0x....      ADR.W    R1,?_14
   \   0000009C   0x2002             MOVS     R0,#+2
   \   0000009E   0x.... 0x....      BL       emberAfPrint
    351          
    352                                  //emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINING, DEVICE_STATE_FLAGS_SET);//MN
    353          
    354                                  //emberAfDebugPrint("@line 333, device state is: %x\n", deviceStateFlags);//MN
    355          
    356                                 
    357                                       
    358                                  emberAfDebugPrint("Reached line 327 aurora-button-joining\n");//MN
   \   000000A2   0x.... 0x....      ADR.W    R1,?_15
   \   000000A6   0x2002             MOVS     R0,#+2
   \   000000A8   0x.... 0x....      BL       emberAfPrint
    359                                
    360                                  // Searches for and joins network
    361                                  emberAfStartSearchForJoinableNetwork();//MN
   \   000000AC   0x.... 0x....      BL       emberAfStartSearchForJoinableNetworkCallback
    362                                    
    363                                  emberAfCorePrintln("%p: join", "BUTTON\r\n");//MN
   \   000000B0   0x.... 0x....      ADR.W    R2,?_17
   \   000000B4   0x.... 0x....      ADR.W    R1,?_16
   \   000000B8   0x2001             MOVS     R0,#+1
   \   000000BA   0x.... 0x....      BL       emberAfPrintln
   \   000000BE   0xE005             B.N      ??CrossCallReturnLabel_4
    364                              
    365                          }
    366                      }
    367                      
    368                      break;
    369          
    370                  case EMBER_JOIN_FAILED:
    371                      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_CLEAR_MASK, DEVICE_STATE_FLAGS_CLEAR); 
   \                     ??emberAfStackStatusCallback_2: (+1)
   \   000000C0   0x.... 0x....      BL       ?Subroutine3
    372                      
    373                        //MN
    374              emberAfDebugPrintln("Reached emberAfStackStatusCallback line 315 Aurora_dimmer_callbacks");
   \                     ??CrossCallReturnLabel_12: (+1)
   \   000000C4   0x.... 0x....      ADR.W    R1,?_18
   \   000000C8   0x.... 0x....      BL       ?Subroutine2
    375                      
    376                      break;
    377          
    378                  default:
    379                    break;
    380              }
    381          
    382              
    383              
    384              return FALSE;
   \                     ??CrossCallReturnLabel_4: (+1)
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    385          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x200F             MOVS     R0,#+15
   \   00000004   0x.... 0x....      B.W      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    386          
    387          /** @brief Finished
    388           *
    389           * This callback is fired when the network-find plugin is finished with the
    390           * forming or joining process.  The result of the operation will be returned in
    391           * the status parameter.
    392           *
    393           * @param status   Ver.: always
    394           */

   \                                 In section .text, align 2, keep-with-next
    395          void emberAfPluginNetworkFindFinishedCallback(EmberStatus status)
    396          {
   \                     emberAfPluginNetworkFindFinishedCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    397            //MN
    398            emberAfDebugPrintln("Reached emberAfPluginNetworkFindFinishedCallback line 341 Aurora_dimmer_callbacks");
   \   00000004   0x.... 0x....      ADR.W    R1,?_19
   \   00000008   0x.... 0x....      BL       ?Subroutine2
    399          
    400              if (status != EMBER_SUCCESS) 
   \                     ??CrossCallReturnLabel_3: (+1)
   \   0000000C   0xB12C             CBZ.N    R4,??CrossCallReturnLabel_2
    401              {
    402                  emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_CLEAR_MASK, DEVICE_STATE_FLAGS_CLEAR);
   \   0000000E   0x.... 0x....      BL       ?Subroutine3
    403             
    404            //MN
    405            emberAfDebugPrintln("Reached emberAfPluginNetworkFindFinishedCallback line 351 Aurora_dimmer_callbacks");
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000012   0x.... 0x....      ADR.W    R1,?_20
   \   00000016   0x.... 0x....      BL       ?Subroutine2
    406          
    407            //delay(1000); //wait 1 second before trying again
    408            
    409            //emberAfPluginAuroraButtonJoiningJoinNetwork(); //this will put AONE back into pairing mdoe if pairing wasn't successful
    410          
    411            
    412              }
    413          
    414              emberAfPluginAuroraButtonJoiningClearJoiningFlag();
   \                     ??CrossCallReturnLabel_2: (+1)
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      emberAfPluginAuroraButtonJoiningClearJoiningFlag
    415          
    416          }
    417          
    418          
    419          /** @brief Image Notify
    420           *
    421           * 
    422           *
    423           * @param payloadType   Ver.: always
    424           * @param queryJitter   Ver.: always
    425           * @param manufacturerId   Ver.: always
    426           * @param imageType   Ver.: always
    427           * @param newFileVersion   Ver.: always
    428           */

   \                                 In section .text, align 2, keep-with-next
    429          boolean emberAfOtaBootloadClusterImageNotifyCallback(int8u payloadType,
    430                                                               int8u queryJitter,
    431                                                               int16u manufacturerId,
    432                                                               int16u imageType,
    433                                                               int32u newFileVersion)
    434          {
    435            return FALSE;
   \                     emberAfOtaBootloadClusterImageNotifyCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    436          }
    437          
    438          /** @brief callback for setting the level
    439           *
    440           * This controls the level of the light. Currently just recalculates the RGB values based 
    441           * on the new level and moves to that colour.
    442           */

   \                                 In section .text, align 2, keep-with-next
    443          void emberAfPluginAuroraLevelControlSetNewLevelCallback(int8u newLevel)
    444          {
   \                     emberAfPluginAuroraLevelControlSetNewLevelCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    445              emberAfDebugPrintln("SetNewLevel %d", newLevel);
   \   00000004   0x4622             MOV      R2,R4
   \   00000006   0x.... 0x....      ADR.W    R1,?_21
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0x.... 0x....      BL       emberAfPrintln
    446              
    447              int8u mode = getAuroraDimmerMode();    
   \   00000010   0x.... 0x....      BL       getAuroraDimmerMode
    448              //emberAfDebugPrintln("AURORA_MODE=%d", mode);    
    449              switch (mode) 
   \   00000014   0x2802             CMP      R0,#+2
   \   00000016   0xD904             BLS.N    ??emberAfPluginAuroraLevelControlSetNewLevelCal_0
   \   00000018   0x1EC1             SUBS     R1,R0,#+3
   \   0000001A   0xD106             BNE.N    ??emberAfPluginAuroraLevelControlSetNewLevelCal_1
    450              {
    451                  case AURORA_MODE_RGBW:
    452                  case AURORA_MODE_CX:
    453                  case AURORA_MODE_DIM:
    454                  {
    455                      emberAfPluginAuroraColourControlSetNewLevel();
    456                      break;
    457                  }    
    458                  case AURORA_MODE_PLC:
    459                  {
    460                      plcSendSetPowerLevelCommand(newLevel);
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       plcSendSetPowerLevelCommand
    461                      emberAfPluginAuroraColourControlSetNewLevel();
   \                     ??emberAfPluginAuroraLevelControlSetNewLevelCal_0: (+1)
   \   00000022   0xE8BD 0x4010      POP      {R4,LR}
   \   00000026   0x.... 0x....      B.W      emberAfPluginAuroraColourControlSetNewLevel
    462                      break;
    463                  }    
    464                  default:
    465                  {
    466                      emberAfDebugPrint("inv mode (0x%x)\r\n", mode);
   \                     ??emberAfPluginAuroraLevelControlSetNewLevelCal_1: (+1)
   \   0000002A   0x....             B.N      ?Subroutine1
    467                      break;
    468                  }
    469              }
    470          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xE8BD 0x4010      POP      {R4,LR}
   \   00000004   0x4602             MOV      R2,R0
   \   00000006   0x.... 0x....      ADR.W    R1,?_22
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0x.... 0x....      B.W      emberAfPrint
    471          
    472          /** @brief Set the colour on the LED
    473           *
    474           * Set the RGB colour on the led.
    475           */

   \                                 In section .text, align 2, keep-with-next
    476          void emberAfPluginAuroraColourControlSetRgbColorCallback(t_RGB* RGB)
    477          {
   \                     emberAfPluginAuroraColourControlSetRgbColorCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    478              emberAfDebugPrintln("Set Color");
   \   00000004   0x.... 0x....      ADR.W    R1,?_23
   \   00000008   0x.... 0x....      BL       ?Subroutine2
    479              
    480              int8u mode = getAuroraDimmerMode();  
   \                     ??CrossCallReturnLabel_1: (+1)
   \   0000000C   0x.... 0x....      BL       getAuroraDimmerMode
    481              //emberAfDebugPrintln("AURORA_MODE=%d", mode);    
    482              switch (mode) 
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD902             BLS.N    ??emberAfPluginAuroraColourControlSetRgbColorCa_0
   \   00000014   0x1EC1             SUBS     R1,R0,#+3
   \   00000016   0xD008             BEQ.N    ??emberAfPluginAuroraColourControlSetRgbColorCa_1
   \   00000018   0xE012             B.N      ??emberAfPluginAuroraColourControlSetRgbColorCa_2
    483              {
    484                  case AURORA_MODE_RGBW:
    485                  case AURORA_MODE_CX:
    486                  case AURORA_MODE_DIM:
    487                  {
    488                      emberAfPluginAuroraPwmSetDutyCycle(RGB);
   \                     ??emberAfPluginAuroraColourControlSetRgbColorCa_0: (+1)
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       emberAfPluginAuroraPwmSetDutyCycle
    489                      emberAfPluginAuroraHostProtocolSetRgbColor(RGB);            
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0xE8BD 0x4010      POP      {R4,LR}
   \   00000026   0x.... 0x....      B.W      emberAfPluginAuroraHostProtocolSetRgbColor
    490                      break;
    491                  }    
    492                  case AURORA_MODE_PLC:
    493                  {
    494                      emberAfPluginAuroraPwmSetDutyCycle(RGB);
   \                     ??emberAfPluginAuroraColourControlSetRgbColorCa_1: (+1)
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       emberAfPluginAuroraPwmSetDutyCycle
    495                      plcSendSetColorCommand(RGB->R, RGB->G, RGB->B, RGB->W);            
   \   00000030   0x78E3             LDRB     R3,[R4, #+3]
   \   00000032   0x78A2             LDRB     R2,[R4, #+2]
   \   00000034   0x7861             LDRB     R1,[R4, #+1]
   \   00000036   0x7820             LDRB     R0,[R4, #+0]
   \   00000038   0xE8BD 0x4010      POP      {R4,LR}
   \   0000003C   0x.... 0x....      B.W      plcSendSetColorCommand
    496                      break;
    497                  }   
    498                  default:
    499                  {
    500                      emberAfDebugPrint("inv mode (0x%x)\r\n", mode);
   \                     ??emberAfPluginAuroraColourControlSetRgbColorCa_2: (+1)
   \   00000040                      REQUIRE ?Subroutine1
   \   00000040                      ;; // Fall through to label ?Subroutine1
    501                      break;
    502                  }
    503              }
    504          }
    505          

   \                                 In section .text, align 2, keep-with-next
    506          void emberAfOnOffClusterSetNewValueCallback(boolean newValue)
    507          {
   \                     emberAfOnOffClusterSetNewValueCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    508              emberAfDebugPrint("SET ON/OFF\r\n");
   \   00000004   0x.... 0x....      ADR.W    R1,?_24
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       emberAfPrint
    509              
    510              int8u mode = getAuroraDimmerMode();        
   \   0000000E   0x.... 0x....      BL       getAuroraDimmerMode
    511              //emberAfDebugPrintln("AURORA_MODE=%d", mode);    
    512              switch (mode) 
   \   00000012   0x2802             CMP      R0,#+2
   \   00000014   0xD902             BLS.N    ??emberAfOnOffClusterSetNewValueCallback_0
   \   00000016   0x1EC1             SUBS     R1,R0,#+3
   \   00000018   0xD005             BEQ.N    ??emberAfOnOffClusterSetNewValueCallback_1
   \   0000001A   0xE011             B.N      ??emberAfOnOffClusterSetNewValueCallback_2
    513              {
    514                  case AURORA_MODE_RGBW:
    515                  case AURORA_MODE_CX:
    516                  case AURORA_MODE_DIM:
    517                  {
    518                      emberAfPluginAuroraColourControlSetOnOff(newValue);            
   \                     ??emberAfOnOffClusterSetNewValueCallback_0: (+1)
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000022   0x.... 0x....      B.W      emberAfPluginAuroraColourControlSetOnOff
    519                      break;
    520                  }    
    521                  case AURORA_MODE_PLC:
    522                  {
    523                      emberAfPluginAuroraColourControlSetOnOff(newValue);
   \                     ??emberAfOnOffClusterSetNewValueCallback_1: (+1)
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       emberAfPluginAuroraColourControlSetOnOff
    524                      if (newValue) 
   \   0000002C   0x2C00             CMP      R4,#+0
   \   0000002E   0xBF1C             ITT      NE 
    525                      {
    526                          plcSendOnCommand();
   \   00000030   0xE8BD 0x4010      POPNE    {R4,LR}
   \   00000034   0x.... 0x....      BNE.W    plcSendOnCommand
    527                      } 
    528                      else 
    529                      {
    530                          plcSendOffCommand();
   \   00000038   0xE8BD 0x4010      POP      {R4,LR}
   \   0000003C   0x.... 0x....      B.W      plcSendOffCommand
    531                      }
    532                      
    533                      break;
    534                  }    
    535                  default:
    536                  {
    537                      emberAfDebugPrintln("inv mode %d", mode);
   \                     ??emberAfOnOffClusterSetNewValueCallback_2: (+1)
   \   00000040   0xE8BD 0x4010      POP      {R4,LR}
   \   00000044   0x4602             MOV      R2,R0
   \   00000046   0x.... 0x....      ADR.W    R1,?_25
   \   0000004A   0x2002             MOVS     R0,#+2
   \   0000004C   0x.... 0x....      B.W      emberAfPrintln
    538                      break;
    539                  }
    540              }
    541          }
    542          
    543          #define EMBER_ZCL_TUNNELING_PROTOCOL_ID_AURORA_PLC               0xC8
    544          
    545          /** @brief Is Protocol Supported
    546           *
    547           * This function is called by the Tunneling server plugin whenever a Request
    548           * Tunnel command is received.  The application should return TRUE if the
    549           * protocol is supported and FALSE otherwise.
    550           *
    551           * @param protocolId The identifier of the metering communication protocol for
    552           * which the tunnel is requested.  Ver.: always
    553           * @param manufacturerCode The manufacturer code for manufacturer-defined
    554           * protocols or 0xFFFF in unused.  Ver.: always
    555           */

   \                                 In section .text, align 2, keep-with-next
    556          boolean emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback(int8u protocolId,
    557                                                                                int16u manufacturerCode)
    558          {
    559              if ((protocolId == EMBER_ZCL_TUNNELING_PROTOCOL_ID_AURORA_PLC) && 
    560                  (manufacturerCode == EMBER_AF_MANUFACTURER_CODE)) 
   \                     emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback: (+1)
   \   00000000   0x28C8             CMP      R0,#+200
   \   00000002   0xBF04             ITT      EQ 
   \   00000004   0xF241 0x0010      MOVWEQ   R0,#+4112
   \   00000008   0x4281             CMPEQ    R1,R0
   \   0000000A   0xD101             BNE.N    ??emberAfPluginAuroraTunnelingServerIsProtocolS_0
    561              {
    562                  return TRUE;
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x4770             BX       LR
    563              }
    564          
    565            return FALSE;
   \                     ??emberAfPluginAuroraTunnelingServerIsProtocolS_0: (+1)
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x4770             BX       LR               ;; return
    566          }
    567          
    568          /** @brief Data Received
    569           *
    570           * This function is called by the Tunneling server plugin whenever data is
    571           * received from a client through a tunnel.
    572           *
    573           * @param tunnelId The identifier of the tunnel through which the data was
    574           * received.  Ver.: always
    575           * @param data Buffer containing the raw octets of the data.  Ver.: always
    576           * @param dataLen The length in octets of the data.  Ver.: always
    577           */

   \                                 In section .text, align 2, keep-with-next
    578          void emberAfPluginAuroraTunnelingServerDataReceivedCallback(int16u tunnelId,
    579                                                                      int8u* data,
    580                                                                      int16u dataLen)
    581          {
   \                     emberAfPluginAuroraTunnelingServerDataReceivedCallback: (+1)
   \   00000000   0x4608             MOV      R0,R1
    582              // Strip off the length byte[0] that is included by the CICIE firmware
    583              dataLen--;
    584              plcSendTunnelCommand(&data[1], (int8u)dataLen);
   \   00000002   0x1E51             SUBS     R1,R2,#+1
   \   00000004   0xB2C9             UXTB     R1,R1
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x.... 0x....      B.W      plcSendTunnelCommand
    585          }
    586          
    587          /** @brief Tunnel Closed
    588           *
    589           * This function is called by the Tunneling server plugin whenever a tunnel is
    590           * closed.  Clients may close tunnels by sending a Close Tunnel command.  The
    591           * server can preemptively close inactive tunnels after a timeout.
    592           *
    593           * @param tunnelId The identifier of the tunnel that has been closed.  Ver.:
    594           * always
    595           * @param clientInitiated TRUE if the client initiated the closing of the tunnel
    596           * or FALSE if the server closed the tunnel due to inactivity.  Ver.: always
    597           */

   \                                 In section .text, align 2, keep-with-next
    598          void emberAfPluginAuroraTunnelingServerTunnelClosedCallback(int16u tunnelId,
    599                                                                      boolean clientInitiated)
    600          {
    601              memset((void*)&tunnelStatus, 0, sizeof(tTunnelStatus));
   \                     emberAfPluginAuroraTunnelingServerTunnelClosedCallback: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable31_4
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x460B             MOV      R3,R1
   \   00000008   0xC00E             STM      R0!,{R1-R3}
    602          }
   \   0000000A   0x4770             BX       LR               ;; return
    603          
    604          /** @brief Tunnel Opened
    605           *
    606           * This function is called by the Tunneling server plugin whenever a tunnel is
    607           * opened.  Clients may open tunnels by sending a Request Tunnel command.
    608           *
    609           * @param tunnelId The identifier of the tunnel that has been opened.  Ver.:
    610           * always
    611           * @param protocolId The identifier of the metering communication protocol for
    612           * the tunnel.  Ver.: always
    613           * @param manufacturerCode The manufacturer code for manufacturer-defined
    614           * protocols or 0xFFFF in unused.  Ver.: always
    615           * @param flowControlSupport TRUE is flow control support is requested or FALSE
    616           * if it is not.  Ver.: always
    617           * @param maximumIncomingTransferSize The maximum incoming transfer size of the
    618           * client.  Ver.: always
    619           */

   \                                 In section .text, align 2, keep-with-next
    620          void emberAfPluginAuroraTunnelingServerTunnelOpenedCallback(int16u tunnelId,
    621                                                                      int8u protocolId,
    622                                                                      int16u manufacturerCode,
    623                                                                      boolean flowControlSupport,
    624                                                                      int16u maximumIncomingTransferSize)
    625          {
   \                     emberAfPluginAuroraTunnelingServerTunnelOpenedCallback: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
    626              // Indicate that the tunnel is open and save tunnel data locally
    627              tunnelStatus.open = TRUE;
   \   00000002   0x....             LDR.N    R4,??DataTable31_4
    628              tunnelStatus.tunnelId = tunnelId;
   \   00000004   0x8060             STRH     R0,[R4, #+2]
   \   00000006   0x2501             MOVS     R5,#+1
    629              tunnelStatus.protocolId = protocolId;
    630              tunnelStatus.manufacturerCode = manufacturerCode;
    631              tunnelStatus.flowControlSupport = flowControlSupport;
    632              tunnelStatus.maximumIncomingTransferSize = maximumIncomingTransferSize;
   \   00000008   0x9803             LDR      R0,[SP, #+12]
   \   0000000A   0x7025             STRB     R5,[R4, #+0]
   \   0000000C   0x7121             STRB     R1,[R4, #+4]
   \   0000000E   0x80E2             STRH     R2,[R4, #+6]
   \   00000010   0x7223             STRB     R3,[R4, #+8]
   \   00000012   0x8160             STRH     R0,[R4, #+10]
    633          }
   \   00000014   0xBD30             POP      {R4,R5,PC}       ;; return
    634          
    635          /** @brief Tunnel Server to Client transfer
    636           *
    637           * If the tunnel is open, sends tunnel data to client
    638           */

   \                                 In section .text, align 2, keep-with-next
    639          void emberAfPluginAuroraHostProcessTunnelResponseCallback(int8u *data, int8u size)
    640          {
    641              // The data includes the length byte at the start.
    642              if (tunnelStatus.open) 
   \                     emberAfPluginAuroraHostProcessTunnelResponseCallback: (+1)
   \   00000000   0x....             LDR.N    R3,??DataTable31_4
   \   00000002   0x781A             LDRB     R2,[R3, #+0]
   \   00000004   0xB122             CBZ.N    R2,??emberAfPluginAuroraHostProcessTunnelResponseC_0
    643              {
    644                  emberAfPluginTunnelingServerTransferData(tunnelStatus.tunnelId, data, size);
   \   00000006   0x460A             MOV      R2,R1
   \   00000008   0x4601             MOV      R1,R0
   \   0000000A   0x8858             LDRH     R0,[R3, #+2]
   \   0000000C   0x.... 0x....      B.W      emberAfPluginTunnelingServerTransferData
    645              }
    646          }
   \                     ??emberAfPluginAuroraHostProcessTunnelResponseC_0: (+1)
   \   00000010   0x4770             BX       LR               ;; return
    647          

   \                                 In section .text, align 2, keep-with-next
    648          void calculateEventDuration_and_stepSize(int16u transitionTimeMs, int16u amount, int32u* eventDurationMs, int16u* stepSize) 
    649          {
   \                     calculateEventDuration_and_stepSize: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x4680             MOV      R8,R0
   \   00000008   0x4614             MOV      R4,R2
   \   0000000A   0x461D             MOV      R5,R3
    650              // Helper fn calculates event duration & step size for given transition time & amount.
    651                 
    652              #define MAX_EVENT_DURATION_MS    MILLISECOND_TICKS_PER_SECOND * 5     // Define a realistic maximum event duration.
    653              
    654              int16u noOfSteps;
    655                 
    656              if (amount == 0)
   \   0000000C   0xD106             BNE.N    ??calculateEventDuration_and_stepSize_0
    657              {
    658                  emberAfDebugPrintln("invalid amount");
   \   0000000E   0x.... 0x....      ADR.W    R1,?_26
   \   00000012   0x.... 0x....      BL       ?Subroutine2
    659                  *eventDurationMs = 0; 
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x6020             STR      R0,[R4, #+0]
    660                  *stepSize = 0;        
   \   0000001A   0xE01D             B.N      ??calculateEventDuration_and_stepSize_1
    661                  return;
    662              }
    663              
    664              if (transitionTimeMs == 0)
   \                     ??calculateEventDuration_and_stepSize_0: (+1)
   \   0000001C   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000020   0xD102             BNE.N    ??calculateEventDuration_and_stepSize_2
    665              {
    666                  *eventDurationMs = 0; // Will schedule a single event.
   \   00000022   0x6020             STR      R0,[R4, #+0]
    667                  *stepSize = amount;
   \   00000024   0x802E             STRH     R6,[R5, #+0]
    668                  noOfSteps = 1;
   \   00000026   0xE018             B.N      ??calculateEventDuration_and_stepSize_3
    669              }
    670              else
    671              {
    672                  *eventDurationMs = transitionTimeMs / amount; 
   \                     ??calculateEventDuration_and_stepSize_2: (+1)
   \   00000028   0xFB98 0xF0F6      SDIV     R0,R8,R6
   \   0000002C   0x6020             STR      R0,[R4, #+0]
    673                  
    674                  int32u minEventDuration = MILLISECOND_TICKS_PER_DECISECOND;  //100mS
   \   0000002E   0x2766             MOVS     R7,#+102
    675                  int32u maxEventDuration = MAX_EVENT_DURATION_MS;  // apply a realistic maximum event duration.        
    676                  if (getAuroraDimmerMode() == AURORA_MODE_DIM)
   \   00000030   0x.... 0x....      BL       getAuroraDimmerMode
   \   00000034   0x2802             CMP      R0,#+2
    677                  {
    678                      minEventDuration = (MILLISECOND_TICKS_PER_DECISECOND * 3);  //300mS
    679                  }
    680                  
    681                  if (*eventDurationMs < minEventDuration)
   \   00000036   0x6820             LDR      R0,[R4, #+0]
   \   00000038   0xBF08             IT       EQ 
   \   0000003A   0xF44F 0x7799      MOVEQ    R7,#+306
   \   0000003E   0x42B8             CMP      R0,R7
   \   00000040   0xBF38             IT       CC 
   \   00000042   0x6027             STRCC    R7,[R4, #+0]
    682                  {
    683                      *eventDurationMs = minEventDuration;
   \   00000044   0xD30F             BCC.N    ??calculateEventDuration_and_stepSize_4
    684                  }
    685                  else
    686                  if (*eventDurationMs > maxEventDuration)
   \   00000046   0xF5B0 0x5FA0      CMP      R0,#+5120
   \   0000004A   0xD908             BLS.N    ??calculateEventDuration_and_stepSize_5
    687                  {
    688                      *eventDurationMs = maxEventDuration;
   \   0000004C   0xF44F 0x50A0      MOV      R0,#+5120
   \   00000050   0x6020             STR      R0,[R4, #+0]
    689                  }
    690                  
    691                  while (*eventDurationMs < maxEventDuration)
    692                  {    
    693                      noOfSteps = transitionTimeMs / *eventDurationMs;  
    694                      if (noOfSteps < 1)
    695                      {
    696                          noOfSteps = 1;   // apply min no of steps.
    697                      }   
    698                      *stepSize = amount / noOfSteps;        
    699                      if (*stepSize != 0)
    700                      {
    701                          break;      
    702                      }        
    703                      *eventDurationMs += 100;  // Add 100ms to event duration and recalculate steps.
    704                  }  
    705                  
    706                  if (*stepSize == 0)
   \                     ??calculateEventDuration_and_stepSize_6: (+1)
   \   00000052   0x8828             LDRH     R0,[R5, #+0]
   \   00000054   0xB908             CBNZ.N   R0,??calculateEventDuration_and_stepSize_3
    707                  {
    708                      *stepSize = 1;  // Finally apply minimum limit to step size.
   \   00000056   0x2001             MOVS     R0,#+1
   \                     ??calculateEventDuration_and_stepSize_1: (+1)
   \   00000058   0x8028             STRH     R0,[R5, #+0]
    709                  }    
    710              }
    711              
    712              //emberAfDebugPrintln("move cfg: eventDurationMs=%d, noOfSteps=%d, stepSize=%d", *eventDurationMs, noOfSteps, *stepSize);
    713          }
   \                     ??calculateEventDuration_and_stepSize_3: (+1)
   \   0000005A   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   \                     ??calculateEventDuration_and_stepSize_5: (+1)
   \   0000005E   0x6820             LDR      R0,[R4, #+0]
   \   00000060   0xF5B0 0x5FA0      CMP      R0,#+5120
   \   00000064   0xD2F5             BCS.N    ??calculateEventDuration_and_stepSize_6
   \                     ??calculateEventDuration_and_stepSize_4: (+1)
   \   00000066   0x6820             LDR      R0,[R4, #+0]
   \   00000068   0xFBB8 0xF1F0      UDIV     R1,R8,R0
   \   0000006C   0xB289             UXTH     R1,R1
   \   0000006E   0xB901             CBNZ.N   R1,??calculateEventDuration_and_stepSize_7
   \   00000070   0x2101             MOVS     R1,#+1
   \                     ??calculateEventDuration_and_stepSize_7: (+1)
   \   00000072   0xFB96 0xF1F1      SDIV     R1,R6,R1
   \   00000076   0x8029             STRH     R1,[R5, #+0]
   \   00000078   0x8829             LDRH     R1,[R5, #+0]
   \   0000007A   0x2900             CMP      R1,#+0
   \   0000007C   0xD1E9             BNE.N    ??calculateEventDuration_and_stepSize_6
   \   0000007E   0x3064             ADDS     R0,R0,#+100
   \   00000080   0x6020             STR      R0,[R4, #+0]
   \   00000082   0xE7EC             B.N      ??calculateEventDuration_and_stepSize_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x43 0x58          DC8      0x43, 0x58, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \   00000000   0x44 0x49          DC8      "DIM"
   \              0x4D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_2:
   \   00000000   0x50 0x4C          DC8      "PLC"
   \              0x43 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_3:
   \   00000000   0x........         DC32     nwkNewJoinPending

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_4:
   \   00000000   0x........         DC32     tunnelStatus

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x43 0x58          DC8 "CX"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x44 0x49          DC8 "DIM"
   \              0x4D 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x50 0x4C          DC8 "PLC"
   \              0x43 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x0D 0x0A          DC8 "\015\012*** Aurora Light Dimmmer ***"
   \              0x2A 0x2A    
   \              0x2A 0x20    
   \              0x41 0x75    
   \              0x72 0x6F    
   \              0x72 0x61    
   \              0x20 0x4C    
   \              0x69 0x67    
   \              0x68 0x74    
   \              0x20 0x44    
   \              0x69 0x6D    
   \              0x6D 0x6D    
   \              0x65 0x72    
   \              0x20 0x2A    
   \              0x2A 0x2A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x4D 0x6F          DC8 "Module fw version: 0x%2X"
   \              0x64 0x75    
   \              0x6C 0x65    
   \              0x20 0x66    
   \              0x77 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x41 0x55          DC8 "AURORA_MODE=%d, "
   \              0x52 0x4F    
   \              0x52 0x41    
   \              0x5F 0x4D    
   \              0x4F 0x44    
   \              0x45 0x3D    
   \              0x25 0x64    
   \              0x2C 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x52 0x47          DC8 "RGBW"
   \              0x42 0x57    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x49 0x6E          DC8 "Invalid"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 53H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x53    
   \   00000010   0x74 0x61          DC8 74H, 61H, 63H, 6BH, 53H, 74H, 61H, 74H
   \              0x63 0x6B    
   \              0x53 0x74    
   \              0x61 0x74    
   \   00000018   0x75 0x73          DC8 75H, 73H, 43H, 61H, 6CH, 6CH, 62H, 61H
   \              0x43 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000020   0x63 0x6B          DC8 63H, 6BH, 20H, 6CH, 69H, 6EH, 65H, 20H
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x20    
   \   00000028   0x32 0x38          DC8 32H, 38H, 35H, 20H, 41H, 75H, 72H, 6FH
   \              0x35 0x20    
   \              0x41 0x75    
   \              0x72 0x6F    
   \   00000030   0x72 0x61          DC8 72H, 61H, 5FH, 64H, 69H, 6DH, 6DH, 65H
   \              0x5F 0x64    
   \              0x69 0x6D    
   \              0x6D 0x65    
   \   00000038   0x72 0x5F          DC8 72H, 5FH, 63H, 61H, 6CH, 6CH, 62H, 61H
   \              0x63 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000040   0x63 0x6B          DC8 63H, 6BH, 73H, 0
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 53H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x53    
   \   00000010   0x74 0x61          DC8 74H, 61H, 63H, 6BH, 53H, 74H, 61H, 74H
   \              0x63 0x6B    
   \              0x53 0x74    
   \              0x61 0x74    
   \   00000018   0x75 0x73          DC8 75H, 73H, 43H, 61H, 6CH, 6CH, 62H, 61H
   \              0x43 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000020   0x63 0x6B          DC8 63H, 6BH, 20H, 6CH, 69H, 6EH, 65H, 20H
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x20    
   \   00000028   0x32 0x39          DC8 32H, 39H, 34H, 20H, 41H, 75H, 72H, 6FH
   \              0x34 0x20    
   \              0x41 0x75    
   \              0x72 0x6F    
   \   00000030   0x72 0x61          DC8 72H, 61H, 5FH, 64H, 69H, 6DH, 6DH, 65H
   \              0x5F 0x64    
   \              0x69 0x6D    
   \              0x6D 0x65    
   \   00000038   0x72 0x5F          DC8 72H, 5FH, 63H, 61H, 6CH, 6CH, 62H, 61H
   \              0x63 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000040   0x63 0x6B          DC8 63H, 6BH, 73H, 0
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x4E 0x77          DC8 "Nwk Status=JOINED, NodeId=0x%2x"
   \              0x6B 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3D 0x4A    
   \              0x4F 0x49    
   \              0x4E 0x45    
   \              0x44 0x2C    
   \              0x20 0x4E    
   \              0x6F 0x64    
   \              0x65 0x49    
   \              0x64 0x3D    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 53H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x53    
   \   00000010   0x74 0x61          DC8 74H, 61H, 63H, 6BH, 53H, 74H, 61H, 74H
   \              0x63 0x6B    
   \              0x53 0x74    
   \              0x61 0x74    
   \   00000018   0x75 0x73          DC8 75H, 73H, 43H, 61H, 6CH, 6CH, 62H, 61H
   \              0x43 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000020   0x63 0x6B          DC8 63H, 6BH, 20H, 6CH, 69H, 6EH, 65H, 20H
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x20    
   \   00000028   0x33 0x31          DC8 33H, 31H, 30H, 20H, 41H, 75H, 72H, 6FH
   \              0x30 0x20    
   \              0x41 0x75    
   \              0x72 0x6F    
   \   00000030   0x72 0x61          DC8 72H, 61H, 5FH, 64H, 69H, 6DH, 6DH, 65H
   \              0x5F 0x64    
   \              0x69 0x6D    
   \              0x6D 0x65    
   \   00000038   0x72 0x5F          DC8 72H, 5FH, 63H, 61H, 6CH, 6CH, 62H, 61H
   \              0x63 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000040   0x63 0x6B          DC8 63H, 6BH, 73H, 0
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x4E 0x77          DC8 "Nwk Status=LEFT_PAN"
   \              0x6B 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3D 0x4C    
   \              0x45 0x46    
   \              0x54 0x5F    
   \              0x50 0x41    
   \              0x4E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 41H, 75H, 72H
   \              0x67 0x69    
   \              0x6E 0x41    
   \              0x75 0x72    
   \   00000018   0x6F 0x72          DC8 6FH, 72H, 61H, 42H, 75H, 74H, 74H, 6FH
   \              0x61 0x42    
   \              0x75 0x74    
   \              0x74 0x6F    
   \   00000020   0x6E 0x4A          DC8 6EH, 4AH, 6FH, 69H, 6EH, 69H, 6EH, 67H
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \   00000028   0x4A 0x6F          DC8 4AH, 6FH, 69H, 6EH, 4EH, 65H, 74H, 77H
   \              0x69 0x6E    
   \              0x4E 0x65    
   \              0x74 0x77    
   \   00000030   0x6F 0x72          DC8 6FH, 72H, 6BH, 20H, 6CH, 69H, 6EH, 65H
   \              0x6B 0x20    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \   00000038   0x20 0x33          DC8 20H, 33H, 31H, 39H, 20H, 61H, 75H, 72H
   \              0x31 0x39    
   \              0x20 0x61    
   \              0x75 0x72    
   \   00000040   0x6F 0x72          DC8 6FH, 72H, 61H, 2DH, 62H, 75H, 74H, 74H
   \              0x61 0x2D    
   \              0x62 0x75    
   \              0x74 0x74    
   \   00000048   0x6F 0x6E          DC8 6FH, 6EH, 2DH, 6AH, 6FH, 69H, 6EH, 69H
   \              0x2D 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x69    
   \   00000050   0x6E 0x67          DC8 6EH, 67H, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x46 0x69          DC8 "Find joinable networks (%x)\015\012"
   \              0x6E 0x64    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x73    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x52 0x65          DC8 "Reached line 327 aurora-button-joining\012"
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x20 0x33    
   \              0x32 0x37    
   \              0x20 0x61    
   \              0x75 0x72    
   \              0x6F 0x72    
   \              0x61 0x2D    
   \              0x62 0x75    
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x2D 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x25 0x70          DC8 "%p: join"
   \              0x3A 0x20    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x42 0x55          DC8 "BUTTON\015\012"
   \              0x54 0x54    
   \              0x4F 0x4E    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 53H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x53    
   \   00000010   0x74 0x61          DC8 74H, 61H, 63H, 6BH, 53H, 74H, 61H, 74H
   \              0x63 0x6B    
   \              0x53 0x74    
   \              0x61 0x74    
   \   00000018   0x75 0x73          DC8 75H, 73H, 43H, 61H, 6CH, 6CH, 62H, 61H
   \              0x43 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000020   0x63 0x6B          DC8 63H, 6BH, 20H, 6CH, 69H, 6EH, 65H, 20H
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x20    
   \   00000028   0x33 0x31          DC8 33H, 31H, 35H, 20H, 41H, 75H, 72H, 6FH
   \              0x35 0x20    
   \              0x41 0x75    
   \              0x72 0x6F    
   \   00000030   0x72 0x61          DC8 72H, 61H, 5FH, 64H, 69H, 6DH, 6DH, 65H
   \              0x5F 0x64    
   \              0x69 0x6D    
   \              0x6D 0x65    
   \   00000038   0x72 0x5F          DC8 72H, 5FH, 63H, 61H, 6CH, 6CH, 62H, 61H
   \              0x63 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \   00000040   0x63 0x6B          DC8 63H, 6BH, 73H, 0
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 4EH, 65H, 74H
   \              0x67 0x69    
   \              0x6E 0x4E    
   \              0x65 0x74    
   \   00000018   0x77 0x6F          DC8 77H, 6FH, 72H, 6BH, 46H, 69H, 6EH, 64H
   \              0x72 0x6B    
   \              0x46 0x69    
   \              0x6E 0x64    
   \   00000020   0x46 0x69          DC8 46H, 69H, 6EH, 69H, 73H, 68H, 65H, 64H
   \              0x6E 0x69    
   \              0x73 0x68    
   \              0x65 0x64    
   \   00000028   0x43 0x61          DC8 43H, 61H, 6CH, 6CH, 62H, 61H, 63H, 6BH
   \              0x6C 0x6C    
   \              0x62 0x61    
   \              0x63 0x6B    
   \   00000030   0x20 0x6C          DC8 20H, 6CH, 69H, 6EH, 65H, 20H, 33H, 34H
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x33 0x34    
   \   00000038   0x31 0x20          DC8 31H, 20H, 41H, 75H, 72H, 6FH, 72H, 61H
   \              0x41 0x75    
   \              0x72 0x6F    
   \              0x72 0x61    
   \   00000040   0x5F 0x64          DC8 5FH, 64H, 69H, 6DH, 6DH, 65H, 72H, 5FH
   \              0x69 0x6D    
   \              0x6D 0x65    
   \              0x72 0x5F    
   \   00000048   0x63 0x61          DC8 63H, 61H, 6CH, 6CH, 62H, 61H, 63H, 6BH
   \              0x6C 0x6C    
   \              0x62 0x61    
   \              0x63 0x6B    
   \   00000050   0x73 0x00          DC8 73H, 0
   \   00000052   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x52 0x65          DC8 52H, 65H, 61H, 63H, 68H, 65H, 64H, 20H
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x20    
   \   00000008   0x65 0x6D          DC8 65H, 6DH, 62H, 65H, 72H, 41H, 66H, 50H
   \              0x62 0x65    
   \              0x72 0x41    
   \              0x66 0x50    
   \   00000010   0x6C 0x75          DC8 6CH, 75H, 67H, 69H, 6EH, 4EH, 65H, 74H
   \              0x67 0x69    
   \              0x6E 0x4E    
   \              0x65 0x74    
   \   00000018   0x77 0x6F          DC8 77H, 6FH, 72H, 6BH, 46H, 69H, 6EH, 64H
   \              0x72 0x6B    
   \              0x46 0x69    
   \              0x6E 0x64    
   \   00000020   0x46 0x69          DC8 46H, 69H, 6EH, 69H, 73H, 68H, 65H, 64H
   \              0x6E 0x69    
   \              0x73 0x68    
   \              0x65 0x64    
   \   00000028   0x43 0x61          DC8 43H, 61H, 6CH, 6CH, 62H, 61H, 63H, 6BH
   \              0x6C 0x6C    
   \              0x62 0x61    
   \              0x63 0x6B    
   \   00000030   0x20 0x6C          DC8 20H, 6CH, 69H, 6EH, 65H, 20H, 33H, 35H
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x33 0x35    
   \   00000038   0x31 0x20          DC8 31H, 20H, 41H, 75H, 72H, 6FH, 72H, 61H
   \              0x41 0x75    
   \              0x72 0x6F    
   \              0x72 0x61    
   \   00000040   0x5F 0x64          DC8 5FH, 64H, 69H, 6DH, 6DH, 65H, 72H, 5FH
   \              0x69 0x6D    
   \              0x6D 0x65    
   \              0x72 0x5F    
   \   00000048   0x63 0x61          DC8 63H, 61H, 6CH, 6CH, 62H, 61H, 63H, 6BH
   \              0x6C 0x6C    
   \              0x62 0x61    
   \              0x63 0x6B    
   \   00000050   0x73 0x00          DC8 73H, 0
   \   00000052   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x53 0x65          DC8 "SetNewLevel %d"
   \              0x74 0x4E    
   \              0x65 0x77    
   \              0x4C 0x65    
   \              0x76 0x65    
   \              0x6C 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x69 0x6E          DC8 "inv mode (0x%x)\015\012"
   \              0x76 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x28    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x53 0x65          DC8 "Set Color"
   \              0x74 0x20    
   \              0x43 0x6F    
   \              0x6C 0x6F    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x53 0x45          DC8 "SET ON/OFF\015\012"
   \              0x54 0x20    
   \              0x4F 0x4E    
   \              0x2F 0x4F    
   \              0x46 0x46    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x69 0x6E          DC8 "inv mode %d"
   \              0x76 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x69 0x6E          DC8 "invalid amount"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x61 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   calculateEventDuration_and_stepSize
        24   -> emberAfPrintln
        24   -> getAuroraDimmerMode
       8   emberAfColorControlClusterMoveColorCallback
         8   -> emberAfPluginAuroraColourControlMoveColor
         8   -> emberAfSendImmediateDefaultResponse
       8   emberAfColorControlClusterMoveToColorCallback
         8   -> emberAfPluginAuroraColourControlMoveToColor
         8   -> emberAfSendImmediateDefaultResponse
       8   emberAfColorControlClusterMoveToColorTemperatureCallback
         8   -> emberAfPluginAuroraColourControlMoveToColorTemperature
         8   -> emberAfSendImmediateDefaultResponse
       8   emberAfColorControlClusterStepColorCallback
         8   -> emberAfPluginAuroraColourControlStepColor
         8   -> emberAfSendImmediateDefaultResponse
       0   emberAfGenericTunnelClusterMatchProtocolAddressCallback
       8   emberAfMainInitCallback
         8   -> emberAfPluginAuroraButtonJoiningButtonIoInit
         8   -> emberAfPluginAuroraButtonJoiningInitialiseLeds
         0   -> emberAfPluginAuroraColourControlInitColorSpaceConversion
         8   -> emberAfPluginAuroraHostHalSerialInitHostPlc
         8   -> emberAfPluginAuroraPwmInitializeTimer
         8   -> emberAfPrint
         8   -> emberAfPrintln
         8   -> getAuroraDimmerMode
       0   emberAfMainStartCallback
       8   emberAfMainTickCallback
         8   -> checkIfPaired
         8   -> emberAfPluginAuroraButtonJoiningUpdateStatusLed
         8   -> emberAfPluginAuroraHostHalPlcCheckHost
         8   -> getAuroraDimmerMode
       8   emberAfOnOffClusterSetNewValueCallback
         8   -> emberAfPluginAuroraColourControlSetOnOff
         8   -> emberAfPrint
         0   -> emberAfPrintln
         8   -> getAuroraDimmerMode
         8   -> plcSendOnCommand
       0   emberAfOtaBootloadClusterImageBlockResponseCallback
       0   emberAfOtaBootloadClusterImageNotifyCallback
       0   emberAfOtaBootloadClusterQueryNextImageResponseCallback
       0   emberAfOtaBootloadClusterUpgradeEndResponseCallback
       8   emberAfPluginAuroraColourControlSetRgbColorCallback
         8   -> emberAfPluginAuroraPwmSetDutyCycle
         0   -> emberAfPrint
         8   -> emberAfPrintln
         8   -> getAuroraDimmerMode
       0   emberAfPluginAuroraHostProcessTunnelResponseCallback
       8   emberAfPluginAuroraLevelControlSetNewLevelCallback
         0   -> emberAfPrint
         8   -> emberAfPrintln
         8   -> getAuroraDimmerMode
         8   -> plcSendSetPowerLevelCommand
       0   emberAfPluginAuroraTunnelingServerDataReceivedCallback
         0   -> plcSendTunnelCommand
       0   emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback
       0   emberAfPluginAuroraTunnelingServerTunnelClosedCallback
      12   emberAfPluginAuroraTunnelingServerTunnelOpenedCallback
       8   emberAfPluginNetworkFindFinishedCallback
         0   -> emberAfPluginAuroraButtonJoiningClearJoiningFlag
         8   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         8   -> emberAfPrintln
      16   emberAfStackStatusCallback
        16   -> emberAfOtaClientStartCallback
        16   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
        16   -> emberAfPrint
        16   -> emberAfPrintln
        16   -> emberAfScanErrorCallback
        16   -> emberAfStartSearchForJoinableNetworkCallback
        16   -> emberGetNodeId
        16   -> emberNetworkState
        16   -> emberTick


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable31_2
       4  ??DataTable31_3
       4  ??DataTable31_4
       8  ?Subroutine0
      16  ?Subroutine1
       6  ?Subroutine2
       8  ?Subroutine3
      32  ?_0
      28  ?_1
      32  ?_10
      68  ?_11
      20  ?_12
      84  ?_13
      32  ?_14
      40  ?_15
      12  ?_16
      12  ?_17
      68  ?_18
      84  ?_19
      20  ?_2
      84  ?_20
      16  ?_21
      20  ?_22
      12  ?_23
      16  ?_24
      12  ?_25
      16  ?_26
       8  ?_3
       4  ?_4
       4  ?_5
       4  ?_6
       8  ?_7
      68  ?_8
      68  ?_9
     132  calculateEventDuration_and_stepSize
       6  emberAfColorControlClusterMoveColorCallback
       8  emberAfColorControlClusterMoveToColorCallback
       8  emberAfColorControlClusterMoveToColorTemperatureCallback
       8  emberAfColorControlClusterStepColorCallback
       4  emberAfGenericTunnelClusterMatchProtocolAddressCallback
     104  emberAfMainInitCallback
       4  emberAfMainStartCallback
      28  emberAfMainTickCallback
      80  emberAfOnOffClusterSetNewValueCallback
       4  emberAfOtaBootloadClusterImageBlockResponseCallback
       4  emberAfOtaBootloadClusterImageNotifyCallback
       4  emberAfOtaBootloadClusterQueryNextImageResponseCallback
       4  emberAfOtaBootloadClusterUpgradeEndResponseCallback
      64  emberAfPluginAuroraColourControlSetRgbColorCallback
      18  emberAfPluginAuroraHostProcessTunnelResponseCallback
      44  emberAfPluginAuroraLevelControlSetNewLevelCallback
      12  emberAfPluginAuroraTunnelingServerDataReceivedCallback
      20  emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback
      12  emberAfPluginAuroraTunnelingServerTunnelClosedCallback
      22  emberAfPluginAuroraTunnelingServerTunnelOpenedCallback
      34  emberAfPluginNetworkFindFinishedCallback
     208  emberAfStackStatusCallback
      12  tunnelStatus

 
    12 bytes in section .bss
    12 bytes in section .rodata
 1 750 bytes in section .text
 
 1 750 bytes of CODE  memory
    12 bytes of CONST memory
    12 bytes of DATA  memory

Errors: none
Warnings: none
